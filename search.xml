<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>大学的一些插画</title>
      <link href="/posts/23dffc0a.html"/>
      <url>/posts/23dffc0a.html</url>
      
        <content type="html"><![CDATA[<h1 id="唯一一幅参赛获得3000奖金的插画"><a href="#唯一一幅参赛获得3000奖金的插画" class="headerlink" title="唯一一幅参赛获得3000奖金的插画"></a>唯一一幅参赛获得3000奖金的插画</h1><p><a href><img src="/img/插画/《少曾苦读黑眼圈》.jpg" alt="赛博朋克"></a></p><h1 id="系列插画"><a href="#系列插画" class="headerlink" title="系列插画"></a>系列插画</h1><p><a href><img src="/img/插画/17330120122-倪博-插画1.jpg" alt="赛博朋克"></a><br><a href><img src="/img/插画/17330120122-倪博-插画2.jpg" alt="赛博朋克"></a><br><a href><img src="/img/插画/17330120122-倪博-插画3.jpg" alt="赛博朋克"></a><br><a href><img src="/img/插画/17330120122-倪博-插画4.jpg" alt="赛博朋克"></a><br><a href><img src="/img/插画/17330120122-倪博-插画5.jpg" alt="赛博朋克"></a></p><h1 id="速涂练习"><a href="#速涂练习" class="headerlink" title="速涂练习"></a>速涂练习</h1><p><a href><img src="/img/插画/20190419博.png" alt="赛博朋克"></a><br><a href><img src="/img/插画/20190424博.png" alt="赛博朋克"></a><br><a href><img src="/img/插画/20190518博.png" alt="赛博朋克"></a></p><h1 id="写生"><a href="#写生" class="headerlink" title="写生"></a>写生</h1><p><a href><img src="/img/插画/17330120122-倪博-风景写生1.jpg" alt="赛博朋克"></a><br><a href><img src="/img/插画/17330120122-倪博-风景写生变调.jpg" alt="赛博朋克"></a></p><h1 id="构成作业"><a href="#构成作业" class="headerlink" title="构成作业"></a>构成作业</h1><p><a href><img src="/img/插画/构成基础-音乐印象1.jpg" alt="赛博朋克"></a><br><a href><img src="/img/插画/构成基础-音乐印象2.jpg" alt="赛博朋克"></a></p>]]></content>
      
      
      <categories>
          
          <category> university </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>大学一些视频</title>
      <link href="/posts/26aa5ed1.html"/>
      <url>/posts/26aa5ed1.html</url>
      
        <content type="html"><![CDATA[<h1 id="毕业设计花逝"><a href="#毕业设计——《花逝》" class="headerlink" title="毕业设计——《花逝》"></a>毕业设计——《花逝》</h1><video src="/move/《花逝》.mp4" position="absolute" width="100%" height="100%" controls="controls"></video><h1 id="剪辑作品言叶之庭"><a href="#剪辑作品——《言叶之庭》" class="headerlink" title="剪辑作品——《言叶之庭》"></a>剪辑作品——《言叶之庭》</h1><video src="/move/言叶之庭.mp4" position="absolute" width="100%" height="100%" controls="controls"></video><h1 id="二维作品玩个鬼"><a href="#二维作品——《玩个鬼》" class="headerlink" title="二维作品——《玩个鬼》"></a>二维作品——《玩个鬼》</h1><video src="/move/玩个鬼.mp4" position="absolute" width="100%" height="100%" controls="controls"></video>]]></content>
      
      
      <categories>
          
          <category> university </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>视频</title>
      <link href="/posts/fcea04bb.html"/>
      <url>/posts/fcea04bb.html</url>
      
        <content type="html"><![CDATA[<h1 id="毕业设计花逝"><a href="#毕业设计——《花逝》" class="headerlink" title="毕业设计——《花逝》"></a>毕业设计——《花逝》</h1><video src="/move/《花逝》.mp4" position="absolute" width="100%" height="100%" controls="controls"></video><h1 id="剪辑作品言叶之庭"><a href="#剪辑作品——《言叶之庭》" class="headerlink" title="剪辑作品——《言叶之庭》"></a>剪辑作品——《言叶之庭》</h1><video src="/move/言叶之庭.mp4" position="absolute" width="100%" height="100%" controls="controls"></video><h1 id="二维作品玩个鬼"><a href="#二维作品——《玩个鬼》" class="headerlink" title="二维作品——《玩个鬼》"></a>二维作品——《玩个鬼》</h1><video src="/move/玩个鬼.mp4" position="absolute" width="100%" height="100%" controls="controls"></video>]]></content>
      
      
      <categories>
          
          <category> university </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Maya Code</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<hr><h1 id="detail-con"><a href="#Detail-Con" class="headerlink" title="Detail Con:"></a>Detail Con:</h1><p><img src="/img/Detail.gif"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1、在需要添加次级控制的地方放置locator</span></span><br><span class="line"><span class="string">2、先选择locator，然后加选蒙模型</span></span><br><span class="line"><span class="string">3、直接执行以下代码即可</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2023/07/31 13:35</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @Author  : 倪博</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> maya.cmds <span class="keyword">as</span> cmds</span><br><span class="line"><span class="keyword">import</span> pymel.core <span class="keyword">as</span> pm</span><br><span class="line"></span><br><span class="line"><span class="comment"># PS：detailFK设置成True即生成次级FK，设置成False为正常的次级控制</span></span><br><span class="line"></span><br><span class="line">keepOrientConstraint,detailFK = <span class="literal">True</span>,<span class="literal">False</span></span><br><span class="line">detailLoc,skinMesh = cmds.ls(sl=<span class="number">1</span>)[:-<span class="number">1</span>],cmds.ls(sl=<span class="number">1</span>)[-<span class="number">1</span>]</span><br><span class="line">cmds.lockNode(<span class="string">&quot;initialShadingGroup&quot;</span>, l=<span class="number">0</span>, lu=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">cmds.select(cl=<span class="number">1</span>)</span><br><span class="line">detailGrpNames = [ <span class="string">&#x27;Subtract&#x27;</span>, <span class="string">&#x27;Offset&#x27;</span>, <span class="string">&#x27;Attach&#x27;</span>]</span><br><span class="line">detailJnt, detailJnGrp, detailCon, detailGrp, detailPlane = [], [], [], [], []</span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(detailLoc)):</span><br><span class="line">    detailJnt.append( cmds.joint( n = <span class="string">&#x27;Detail_Jnt%i&#x27;</span>%d ) )</span><br><span class="line">    detailJnGrp.append( cmds.group( n = <span class="string">&#x27;Detail_Jnt%i_Offset&#x27;</span>%d ) )</span><br><span class="line">    detailCon.append( cmds.circle( n = <span class="string">&#x27;Detail_Con%i&#x27;</span>%d, r = <span class="number">0.1</span>, ch = <span class="number">0</span> )[<span class="number">0</span>] )</span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> detailGrpNames:</span><br><span class="line">         detailGrp.append( cmds.group( n = <span class="string">&#x27;Detail_Grp%i_%s&#x27;</span>%( d, n ), em = <span class="number">0</span> )  )</span><br><span class="line">    detailPlane.append( cmds.polyPlane( n = <span class="string">&#x27;Detail_Plane%i&#x27;</span>%d, sy=<span class="number">1</span>, sx=<span class="number">1</span>, w=<span class="number">0.1</span>, h=<span class="number">0.1</span>, ch = <span class="number">0</span> )[<span class="number">0</span>] )</span><br><span class="line">    cmds.delete( cmds.parentConstraint( [detailLoc[d], <span class="string">&#x27;Detail_Plane%i&#x27;</span>%d ], mo=<span class="number">0</span>, weight=<span class="number">1</span>) )</span><br><span class="line">    cmds.select(cl=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">detailAttachLoc = []</span><br><span class="line">detailPlane = cmds.polyUnite(detailPlane, name=<span class="string">&#x27;Detail_Plane&#x27;</span>, ch=<span class="number">0</span>, mergeUVSets=<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(detailLoc)):</span><br><span class="line">    cmds.select( <span class="string">&#x27;Detail_Plane.f[%i]&#x27;</span>%d, r=<span class="number">1</span> )</span><br><span class="line">    pm.mel.cMuscleSurfAttachSetup()</span><br><span class="line">    cmds.rename(cmds.ls(sl=<span class="number">1</span>)[<span class="number">0</span>],<span class="string">&quot;Detail_Attach_Loc%i&quot;</span>%d)</span><br><span class="line">    cmds.setAttr(<span class="string">&quot;Detail_Attach_LocShape%i.size&quot;</span>%d, <span class="number">0.1</span>)</span><br><span class="line">    detailAttachLoc.append(<span class="string">&quot;Detail_Attach_Loc%i&quot;</span>%d)</span><br><span class="line">cmds.rename(cmds.listRelatives(<span class="string">&quot;Detail_Attach_Loc0&quot;</span>,p=<span class="number">1</span>)[<span class="number">0</span>],<span class="string">&quot;Detail_Attach_Loc_GRP&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">detailAttachGrp = [g <span class="keyword">for</span> g <span class="keyword">in</span> detailGrp <span class="keyword">if</span> g.split(<span class="string">&#x27;_&#x27;</span>)[-<span class="number">1</span>]==<span class="string">&#x27;Attach&#x27;</span> ]</span><br><span class="line">detailSubtractGrp = [g <span class="keyword">for</span> g <span class="keyword">in</span> detailGrp <span class="keyword">if</span> g.split(<span class="string">&#x27;_&#x27;</span>)[-<span class="number">1</span>]==<span class="string">&#x27;Subtract&#x27;</span> ]</span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(detailLoc)):</span><br><span class="line">    cmds.pointConstraint([ detailAttachLoc[d], detailAttachGrp[d] ], mo=<span class="number">0</span>, weight=<span class="number">1</span>)</span><br><span class="line">    cmds.orientConstraint([ detailAttachLoc[d], detailAttachGrp[d] ], mo=<span class="number">0</span>, weight=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> keepOrientConstraint:</span><br><span class="line">    cmds.delete( cmds.orientConstraint([ detailAttachLoc[d], detailAttachGrp[d] ], mo=<span class="number">0</span>, weight=<span class="number">1</span>) )</span><br><span class="line">    cmds.delete( cmds.parentConstraint([ detailCon[d], detailJnGrp[d] ], weight=<span class="number">1</span>) )</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="string">&#x27;translate&#x27;</span>,<span class="string">&#x27;rotate&#x27;</span>,<span class="string">&#x27;scale&#x27;</span>]:</span><br><span class="line">        cmds.connectAttr(<span class="string">&#x27;%s.%s&#x27;</span>%(detailCon[d],i), <span class="string">&#x27;%s.%s&#x27;</span>%(detailJnt[d],i), f=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    translateMultiplyDivide = cmds.createNode(<span class="string">&quot;multiplyDivide&quot;</span>, n = detailCon[d]+<span class="string">&#x27;_Translate_MultiplyDivide&#x27;</span>)</span><br><span class="line">    rotateMultiplyDivide = cmds.createNode(<span class="string">&quot;multiplyDivide&quot;</span>, n = detailCon[d]+<span class="string">&#x27;_Rotate_MultiplyDivide&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="string">&#x27;X&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>,<span class="string">&#x27;Z&#x27;</span>]:</span><br><span class="line">        cmds.setAttr(<span class="string">&quot;%s.input2%s&quot;</span>%(translateMultiplyDivide,i), -<span class="number">1</span>)</span><br><span class="line">        cmds.setAttr(<span class="string">&quot;%s.input2%s&quot;</span>%(rotateMultiplyDivide,i), -<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    cmds.connectAttr(<span class="string">&#x27;%s.translate&#x27;</span>%detailCon[d], <span class="string">&#x27;%s.input1&#x27;</span>%translateMultiplyDivide, f=<span class="number">1</span>)</span><br><span class="line">    cmds.connectAttr(<span class="string">&#x27;%s.rotate&#x27;</span>%detailCon[d], <span class="string">&#x27;%s.input1&#x27;</span>%rotateMultiplyDivide, f=<span class="number">1</span>)</span><br><span class="line">    cmds.connectAttr(<span class="string">&#x27;%s.output&#x27;</span>%translateMultiplyDivide, <span class="string">&#x27;%s.translate&#x27;</span>%detailSubtractGrp[d], f=<span class="number">1</span>)</span><br><span class="line">    cmds.connectAttr(<span class="string">&#x27;%s.output&#x27;</span>%rotateMultiplyDivide, <span class="string">&#x27;%s.rotate&#x27;</span>%detailSubtractGrp[d], f=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cmds.duplicate(skinMesh, n = skinMesh+<span class="string">&#x27;_Detail_Skin&#x27;</span>, rr=<span class="number">1</span>)</span><br><span class="line">cmds.blendShape([skinMesh+<span class="string">&#x27;_Detail_Skin&#x27;</span>, skinMesh], n = skinMesh+<span class="string">&#x27;_Detail_BS&#x27;</span>, automatic=<span class="number">1</span>)</span><br><span class="line">cmds.setAttr(<span class="string">&quot;%s.%s&quot;</span>%(skinMesh+<span class="string">&#x27;_Detail_BS&#x27;</span>,skinMesh+<span class="string">&#x27;_Detail_Skin&#x27;</span>), <span class="number">1</span>)</span><br><span class="line">cmds.select([ <span class="string">&#x27;Detail_Plane&#x27;</span>,skinMesh ])</span><br><span class="line">cmds.CreateWrap()</span><br><span class="line"></span><br><span class="line">detailAll = [skinMesh+<span class="string">&#x27;Base&#x27;</span>, <span class="string">&#x27;Detail_Plane&#x27;</span>,<span class="string">&#x27;Detail_Attach_Loc_GRP&#x27;</span>, <span class="string">&#x27;Detail_Loc_GRP&#x27;</span>, <span class="string">&#x27;Detail_Jnt_GRP&#x27;</span>,<span class="string">&#x27;Detail_Con_GRP&#x27;</span>, skinMesh+<span class="string">&#x27;_Detail_Skin&#x27;</span>]   </span><br><span class="line">cmds.group(detailJnGrp, n = <span class="string">&#x27;Detail_Jnt_GRP&#x27;</span>)  </span><br><span class="line">cmds.joint( n = <span class="string">&#x27;Detail_Jnt_Root&#x27;</span>) </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> detailFK:</span><br><span class="line">detailJnGrp.reverse()</span><br><span class="line">detailJnt.reverse()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">zip</span>(detailJnGrp[:-<span class="number">1</span>],detailJnt[<span class="number">1</span>:]):</span><br><span class="line">cmds.parent(i)</span><br><span class="line"></span><br><span class="line">cmds.group(detailAttachGrp, n = <span class="string">&#x27;Detail_Con_GRP&#x27;</span>)   </span><br><span class="line">cmds.group(detailLoc, n = <span class="string">&#x27;Detail_Loc_GRP&#x27;</span>)   </span><br><span class="line">cmds.group(detailAll, n = <span class="string">&#x27;DetailSystem&#x27;</span>)   </span><br><span class="line">cmds.hide(detailAll[<span class="number">0</span>:<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line">cmds.select([skinMesh+<span class="string">&#x27;_Detail_Skin&#x27;</span>,<span class="string">&#x27;Detail_Jnt_Root&#x27;</span>])</span><br><span class="line">cmds.select(detailJnt,add=<span class="number">1</span>)</span><br><span class="line">cmds.SmoothBindSkin()</span><br><span class="line">cmds.select(<span class="string">&#x27;DetailSystem&#x27;</span>, r=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h1 id="creat-fk"><a href="#Creat-FK" class="headerlink" title="Creat FK:"></a>Creat FK:</h1><p><img src="/img/FK.gif"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Time    : 2020/9/7 13:35</span><br><span class="line"># @File    : matchSizeMain.py</span><br><span class="line"># @Author  : nb</span><br><span class="line">from PySide2.QtGui import *</span><br><span class="line">from PySide2.QtCore import *</span><br><span class="line">from PySide2.QtWidgets import *</span><br><span class="line">from PySide2 import QtWidgets</span><br><span class="line">from PySide2 import QtCore</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">from shiboken2 import wrapInstance</span><br><span class="line"></span><br><span class="line">import maya.cmds as cmds</span><br><span class="line">import pymel.core as pm</span><br><span class="line">import math</span><br><span class="line">from functools import reduce</span><br><span class="line"></span><br><span class="line">import maya.OpenMayaUI as omui</span><br><span class="line"></span><br><span class="line">def getMayaMainWin():</span><br><span class="line">    pointer = omui.MQtUtil.mainWindow()</span><br><span class="line">    return wrapInstance(long(pointer), QtWidgets.QWidget)</span><br><span class="line"></span><br><span class="line">mayaWindow = getMayaMainWin()</span><br><span class="line">mayaWindow.setWindowOpacity(1)</span><br><span class="line"></span><br><span class="line">class MyWin(QtWidgets.QDialog):</span><br><span class="line">def __init__(self, parent=getMayaMainWin()):</span><br><span class="line">super(MyWin,self).__init__(parent)</span><br><span class="line">self.setWindowTitle(u&quot;博的控制器工具&quot;)</span><br><span class="line">self.setMinimumWidth(260)</span><br><span class="line">self.setWindowFlags(self.windowFlags()^QtCore.Qt.WindowContextHelpButtonHint)</span><br><span class="line"></span><br><span class="line">self.layout = QVBoxLayout()</span><br><span class="line">self.setLayout(self.layout)</span><br><span class="line"></span><br><span class="line">self.button = QPushButton(&quot;Creat Con&quot;)</span><br><span class="line">self.layout.addWidget(self.button)</span><br><span class="line">self.button.clicked.connect(self.maxConMain)</span><br><span class="line"></span><br><span class="line">self.button = QPushButton(&quot;Scale Con&quot;)</span><br><span class="line">self.layout.addWidget(self.button)</span><br><span class="line">self.button.clicked.connect(self.scalE)</span><br><span class="line"></span><br><span class="line">self.button = QPushButton(&quot;Match Size&quot;)</span><br><span class="line">self.layout.addWidget(self.button)</span><br><span class="line">self.button.clicked.connect(self.matchSizeMain)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">self.show()</span><br><span class="line"></span><br><span class="line"># -------------------------- set color --------------------------</span><br><span class="line"></span><br><span class="line">def changeColors(self,colorName):</span><br><span class="line">    colorDict = &#123;1 : (1, 0, 0), 2 : (1, 1, 0), 3 : (0, 0.016, 0.373),</span><br><span class="line">           4 : (0, 1, 0), 5 : (0.78, 0, 0.78), 6 : (0.263, 1, 0.635),</span><br><span class="line">           7 : (.000, .000, .000), 8 : (.247, .247, .247), 9 : (1 , 1, 1)&#125;</span><br><span class="line">    colorObj = cmds.ls(sl = 1)</span><br><span class="line">    for i in range(len(colorObj)):</span><br><span class="line">        cmds.setAttr(&quot;%s.overrideEnabled&quot;%colorObj[i], 0)</span><br><span class="line">        cmds.color( colorObj[i], rgb = colorDict[colorName] )</span><br><span class="line"></span><br><span class="line">def setColor(self,con):</span><br><span class="line">    conPos = int(cmds.xform(con,q=1,ws=1,t=1)[0])</span><br><span class="line">    if conPos&lt;0:</span><br><span class="line">        changeColors(1)</span><br><span class="line">    elif conPos&gt;0:</span><br><span class="line">        changeColors(3)</span><br><span class="line">    else:changeColors(2)</span><br><span class="line"></span><br><span class="line">def setColor_Main(self):</span><br><span class="line">    jnt = getJnt()[1] </span><br><span class="line">    for j in range(len(jnt)):</span><br><span class="line">        cmds.select(cl=1)</span><br><span class="line">        cmds.select(jnt[j]+&quot;_con&quot;)</span><br><span class="line">        setColor(jnt[j]+&quot;_con&quot;)</span><br><span class="line">        cmds.select(cl=1)</span><br><span class="line">        </span><br><span class="line">#  -------------------------- creat con --------------------------    </span><br><span class="line">def excludeParent(self,allJnt):</span><br><span class="line">    parentJnt = cmds.listRelatives(allJnt,p=1)</span><br><span class="line">    if cmds.objectType( parentJnt ) != &quot;joint&quot;:return self.excludeParent(parentJnt)</span><br><span class="line">    else:return parentJnt</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">def getJnt(self):</span><br><span class="line">    rootJnt, allJnt = cmds.ls(sl=1), []</span><br><span class="line">    cmds.select(rootJnt,hi=1)</span><br><span class="line">    for jnt in cmds.ls(sl=1):</span><br><span class="line">        if cmds.objectType(jnt) ==&quot;joint&quot;:</span><br><span class="line">            allJnt.append(jnt)</span><br><span class="line">            </span><br><span class="line">    return rootJnt, allJnt</span><br><span class="line"></span><br><span class="line">def aboutHier(self,chileAndPareentList):</span><br><span class="line">    for cp in chileAndPareentList:</span><br><span class="line">        cmds.parent(cp)</span><br><span class="line"></span><br><span class="line">def parentCon(self,con,jnt):</span><br><span class="line">    cmds.delete(cmds.parentConstraint(con,jnt,mo=0, weight=1))</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">def creatCon(self,aboutJnt, parentConstraints = True):</span><br><span class="line">    </span><br><span class="line">    chileList, parentList, pointPos = [], [], [(0.0, 0.0, -18.609695434570312),(0.0, -3.459063895346508, -3.459063895346508),(0.0, -18.609695434570312, 0.0),(0.0, -3.459063895346508, 3.459063895346508),(0.0, 0.0, 18.609695434570312),(0.0, 3.459063895346508, 3.459063895346508),(0.0, 18.609695434570312, 0.0),(0.0, 3.459063895346508, -3.459063895346508),(0.0, 0.0, -18.609695434570312)]    </span><br><span class="line">    for jnt in range(len(aboutJnt[1])):</span><br><span class="line">    </span><br><span class="line">        if cmds.objectType(aboutJnt[1][jnt]) == &quot;joint&quot;:</span><br><span class="line">            con = cmds.rename(cmds.curve(p = pointPos, k = [ c for c in range(len(pointPos)) ],d=1), &quot;%s%s&quot;%(aboutJnt[1][jnt], &quot;_con&quot;) )</span><br><span class="line"></span><br><span class="line">            conGrp = cmds.group(cmds.ls(sl=1), n = &quot;%s%s&quot;%(con, &quot;_grp&quot;))</span><br><span class="line">            </span><br><span class="line">            self.parentCon(aboutJnt[1][jnt],conGrp )</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            if parentConstraints:</span><br><span class="line">                cmds.parentConstraint(con,aboutJnt[1][jnt],mo=1, weight=1)</span><br><span class="line">            </span><br><span class="line">            if aboutJnt[1][jnt] != aboutJnt[0][0]:</span><br><span class="line">                chileList.append(conGrp)</span><br><span class="line">                parentList.append(&quot;%s%s&quot;%( self.excludeParent(aboutJnt[1][jnt])[0],&quot;_con&quot;))</span><br><span class="line">        else:</span><br><span class="line">            cmds.inViewMessage(amg = &#x27;根骨骼下有啥子东西 &lt;hl&gt;不是骨骼&lt;/hl&gt;.&#x27;, pos = &#x27;midCenter&#x27;, fade = True, fst = 3000)</span><br><span class="line"></span><br><span class="line">    chileAndPareentList = zip(chileList,parentList)</span><br><span class="line">    </span><br><span class="line">    return chileAndPareentList</span><br><span class="line"></span><br><span class="line">def maxConMain(self):</span><br><span class="line">    if cmds.ls(sl=1):</span><br><span class="line">        aboutJnt = self.getJnt()</span><br><span class="line">        chileAndPareentList = self.creatCon(aboutJnt)</span><br><span class="line">        self.aboutHier(chileAndPareentList)</span><br><span class="line">        </span><br><span class="line">        #Layer</span><br><span class="line">        cmds.select(chileAndPareentList[0][1]+&quot;_grp&quot;,r=1)</span><br><span class="line">        pm.createDisplayLayer(nr=1, name=&quot;jntCon&quot;, number=1)</span><br><span class="line">        #ConstraintSystem</span><br><span class="line">        cmds.hide(cmds.parent(cmds.group(&quot;*_parentConstraint1&quot;,n = &quot;ConstraintSystem&quot;),w=1))</span><br><span class="line">        cmds.select(aboutJnt[0],r=1)</span><br><span class="line">        self.setColor_Main()</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    else:</span><br><span class="line">        cmds.inViewMessage(amg = &#x27;&lt;hl&gt;请选择根骨骼&lt;/hl&gt;.&#x27;, pos = &#x27;midCenter&#x27;, fade = True, fst = 3000)</span><br><span class="line"></span><br><span class="line">#  -------------------------- scale Con -------------------------- </span><br><span class="line">def length(self,a,b):</span><br><span class="line">    c = [a[i]-b[i] for i in range(len(a))]</span><br><span class="line">    return math.sqrt(reduce(lambda x,y:x+y,[i**2 for i in c]))</span><br><span class="line"></span><br><span class="line">def getRadius(self,con):</span><br><span class="line">    conPos, rList = cmds.xform(con,q=1,t=1,ws=1) ,[]</span><br><span class="line"></span><br><span class="line">    for i in cmds.ls(&quot;%s.cv[:]&quot;%con,fl=1):</span><br><span class="line">        rList.append(self.length(cmds.pointPosition(i),conPos))</span><br><span class="line"></span><br><span class="line">    return max(rList)</span><br><span class="line"></span><br><span class="line">def get_soft_radius(self):</span><br><span class="line">    return pm.softSelect(q=1, ssd=1)</span><br><span class="line"></span><br><span class="line">def scalE(self):</span><br><span class="line">    selList = cmds.ls(sl=1)</span><br><span class="line">    </span><br><span class="line">    for i in range(len(selList)):</span><br><span class="line">        soft_radius=self.get_soft_radius()</span><br><span class="line">        conRadius = self.getRadius(selList[i])</span><br><span class="line">        scaleValue = soft_radius/conRadius</span><br><span class="line">        mesh = cmds.ls(sl=1,o=1)[:]</span><br><span class="line">        for i in range(len(mesh)):</span><br><span class="line">            VerterArray = cmds.ls(&quot;%s.cv[:]&quot;%mesh[i],fl=1)</span><br><span class="line">            cmds.scale(scaleValue,scaleValue,scaleValue,VerterArray)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ------------Common function------------</span><br><span class="line"></span><br><span class="line">def length0(self,a, b):</span><br><span class="line">    c = [a[i] - b[i] for i in range(len(a))]</span><br><span class="line">    return math.sqrt(reduce(lambda x, y: x + y, [i ** 2 for i in c]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def getRadius0(self,con):</span><br><span class="line">    conPos, rList = cmds.xform(con, q=1, t=1, ws=1), []</span><br><span class="line">    for i in cmds.ls(&quot;%s.cv[:]&quot; % con, fl=1):</span><br><span class="line">        rList.append(self.length0(cmds.pointPosition(i), conPos))</span><br><span class="line">    return max(rList)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def scaleCon(self,conAndPos, mag=2.5):</span><br><span class="line">    for con in range(len(conAndPos)):</span><br><span class="line">        cmds.select(conAndPos[con][0])</span><br><span class="line">        conRadius = self.getRadius0(conAndPos[con][0])</span><br><span class="line">        minDis = conAndPos[con][1]</span><br><span class="line">        scaleValue = minDis * mag / conRadius</span><br><span class="line">        verterArray = cmds.ls(&quot;%s.cv[:]&quot; % conAndPos[con][0], fl=1)</span><br><span class="line">        cmds.scale(scaleValue, scaleValue, scaleValue, verterArray)</span><br><span class="line">        cmds.select(cl=1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def minDis(self,pointPos, conPos):</span><br><span class="line">    pointConPos = [(pointPos[p], conPos) for p in range(len(pointPos))]</span><br><span class="line">    subList = [[pointConPos[pc][0][n] - pointConPos[pc][1][n] for n in range(3)] for pc in range(len(pointConPos))]</span><br><span class="line">    minDis = min([math.sqrt(reduce(lambda x, y: x + y, [i ** 2 for i in subList[s]])) for s in range(len(subList))])</span><br><span class="line">    return minDis</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def minDisList(self,conAndModPos):</span><br><span class="line">    minDisList = []</span><br><span class="line">    for con in range(len(conAndModPos[&quot;con&quot;])):</span><br><span class="line">        minDisList.append(self.minDis(conAndModPos[&quot;mod&quot;], conAndModPos[&quot;con&quot;][con]))</span><br><span class="line">    return minDisList</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ------------matchSizeMain()------------</span><br><span class="line"></span><br><span class="line">def getJntAndMod(self,sels):</span><br><span class="line">    jntList = []</span><br><span class="line">    if len(sels) == 2:</span><br><span class="line">        rootJnt, mod = sels[0], sels[1]</span><br><span class="line">        if cmds.objectType(rootJnt) == &#x27;transform&#x27;:</span><br><span class="line">            rootJnt, mod = mod, rootJnt</span><br><span class="line">        cmds.select(mod, d=1)</span><br><span class="line">        cmds.select(rootJnt, hi=1)</span><br><span class="line">        for jnt in cmds.ls(sl=1):</span><br><span class="line">            if cmds.objectType(jnt) == &quot;joint&quot;:</span><br><span class="line">                jntList.append(jnt)</span><br><span class="line">        cmds.select(d=1)</span><br><span class="line">        return [jntList, mod]</span><br><span class="line">    else:</span><br><span class="line">        cmds.warning(&quot;Please select model and rootJnt！！！&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def getConAndModPos(self,jntAndMod):</span><br><span class="line">    jntList, mod, pointPos = jntAndMod[0], jntAndMod[1], []</span><br><span class="line">    conPos = [cmds.xform(jntList[jnt], q=1, ws=1, t=1) for jnt in range(len(jntList))]</span><br><span class="line">    pointPos = [list(cmds.pointPosition(i)) for i in cmds.ls(&quot;%s.vtx[:]&quot; % mod, fl=1)]</span><br><span class="line">    return &#123;&quot;con&quot;: conPos, &quot;mod&quot;: pointPos&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def getConFromJnt(self,jntList):</span><br><span class="line">    conList = []</span><br><span class="line">    for jnt in range(len(jntList)):</span><br><span class="line">        con = jntList[jnt] + &quot;_con&quot;</span><br><span class="line">        conList.append(con)</span><br><span class="line">    return conList</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def matchSizeMain(self,nums=2.5):</span><br><span class="line">    jntAndMod = self.getJntAndMod(cmds.ls(sl=1))</span><br><span class="line">    conAndModPos = self.getConAndModPos(jntAndMod)</span><br><span class="line">    minDisLists = self.minDisList(conAndModPos)</span><br><span class="line">    conList = self.getConFromJnt(jntAndMod[0])</span><br><span class="line">    conAndPos = zip(conList, minDisLists)</span><br><span class="line">    self.scaleCon(conAndPos, nums)</span><br><span class="line"></span><br><span class="line"># ------------scaleselectedConMain()------------</span><br><span class="line"></span><br><span class="line">def selectNurbsCurve(self):</span><br><span class="line">    cmds.select(cmds.ls(type=&#x27;nurbsCurve&#x27;, v=1), tgl=1)</span><br><span class="line">    cmds.select(cmds.listRelatives(cmds.ls(sl=1), p=1))</span><br><span class="line">    print &quot;请加选模型&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def getConAndMod(self,sels):</span><br><span class="line">    conList, mod = sels[0:-1], sels[-1]</span><br><span class="line">    cmds.select(d=1)</span><br><span class="line">    cmds.select(cmds.listRelatives(mod, c=1), r=1)</span><br><span class="line">    modShape = cmds.ls(sl=1)</span><br><span class="line">    if len(modShape) &gt;= 2:</span><br><span class="line">        cmds.select(d=1)</span><br><span class="line">        print &quot;请选择模型&quot;</span><br><span class="line">    elif cmds.objectType(modShape) == &#x27;mesh&#x27;:</span><br><span class="line">        return [conList, mod]</span><br><span class="line">    else:</span><br><span class="line">        cmds.select(d=1)</span><br><span class="line">        print(&quot;请选择模型&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def getConAndModPos(self,conAndMod):</span><br><span class="line">    conList, mod, pointPos = conAndMod[0], conAndMod[1], []</span><br><span class="line">    conPos = [cmds.xform(conList[con], q=1, ws=1, t=1) for con in range(len(conList))]</span><br><span class="line">    pointPos = [list(cmds.pointPosition(i)) for i in cmds.ls(&quot;%s.vtx[:]&quot; % mod, fl=1)]</span><br><span class="line">    return &#123;&quot;con&quot;: conPos, &quot;mod&quot;: pointPos&#125;</span><br><span class="line"></span><br><span class="line">def scaleselectedConMain(self,nums=2.5):</span><br><span class="line">    conAndMod = getConAndMod(cmds.ls(sl=1))</span><br><span class="line">    conAndModPos = self.getConAndModPos(conAndMod)</span><br><span class="line">    minDisLists = self.minDisList(conAndModPos)</span><br><span class="line">    conAndPos = zip(conAndMod[0], minDisLists)</span><br><span class="line">    self.scaleCon(conAndPos, nums)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">myCon = MyWin()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> codes </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Favorite movies</title>
      <link href="/posts/faf281f6.html"/>
      <url>/posts/faf281f6.html</url>
      
        <content type="html"><![CDATA[<h1 id="赛博朋克-边缘行者"><a href="#赛博朋克-边缘行者" class="headerlink" title="赛博朋克 边缘行者"></a>赛博朋克 边缘行者</h1><p>This is it.<br>It’s the end of the line for me.<br>But not for you.<br>Fast is what you do best, ain’t it?<br>Now, run.</p><p><a href="https://www.ysjihe.cc/vodplay/524425-68-1.html"><img src="/img/img.png" alt="赛博朋克"></a></p><h1 id="言叶之庭"><a href="#言叶之庭" class="headerlink" title="言叶之庭"></a>言叶之庭</h1><p>我啊……<br>无法顺利地走下去了，<br>不知从什么时候起。</p><p><a href="https://www.ysjihe.cc/vodplay/524425-68-1.html"><img src="/img/言叶之庭.jpg" alt="言叶之庭"></a></p><h1 id="地下拳击俱乐部"><a href="#地下拳击俱乐部" class="headerlink" title="地下拳击俱乐部"></a>地下拳击俱乐部</h1><p>You met me at a very strange time in my life.<br><a href="https://www.92kys.com/play/11684-1-1/"><img src="/img/地下拳击俱乐部.jpg" alt="地下拳击俱乐部"></a></p><h1 id="行尸之惧"><a href="#行尸之惧" class="headerlink" title="行尸之惧"></a>行尸之惧</h1><p>Do not wait for your deathbed to enjoy your champagne.<br><a href="https://www.zsych.net/play/xingshizhijudiyiji_2_1.html"><img src="/img/行尸之惧.jpg" alt="行尸之惧"></a></p>]]></content>
      
      
      <categories>
          
          <category> moves </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>罪恶装备</title>
      <link href="/posts/b29ace19.html"/>
      <url>/posts/b29ace19.html</url>
      
        <content type="html"><![CDATA[<p>绑定骨骼架设的参考书籍<br><div class="row">    <embed src="/pdf/罪恶装备系绑定骨骼架设入门.pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
      
      
      <categories>
          
          <category> works </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"倪博","short_name":"倪博","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>bangumis</title>
      <link href="/bangumis/index.html"/>
      <url>/bangumis/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {  font-family: ZhuZiAYuanJWD;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);  font-display: swap;  font-weight: lighter;}div#menus {  font-family: "ZhuZiAYuanJWD";}h1#site-title {  font-family: ZhuZiAYuanJWD;  font-size: 3em !important;}a.article-title,a.blog-slider__title,a.categoryBar-list-link,h1.post-title {  font-family: ZhuZiAYuanJWD;}.iconfont {  font-family: "iconfont" !important;  font-size: 3em;  /* 可以定义图标大小 */  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}/* 时间轴生肖icon */svg.icon {  /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */  width: 1em;  height: 1em;  /* width和height定义图标的默认宽度和高度*/  vertical-align: -0.15em;  fill: currentColor;  overflow: hidden;}.icon-zhongbiao::before {  color: #f7c768;}/* bilibli番剧插件 */#article-container .bangumi-tab.bangumi-active {  background: var(--anzhiyu-theme);  color: var(--anzhiyu-ahoverbg);  border-radius: 10px;}a.bangumi-tab:hover {  text-decoration: none !important;}.bangumi-button:hover {  background: var(--anzhiyu-theme) !important;  border-radius: 10px !important;  color: var(--anzhiyu-ahoverbg) !important;}a.bangumi-button.bangumi-nextpage:hover {  text-decoration: none !important;}.bangumi-button {  padding: 5px 10px !important;}a.bangumi-tab {  padding: 5px 10px !important;}svg.icon.faa-tada {  font-size: 1.1em;}.bangumi-info-item {  border-right: 1px solid #f2b94b;}.bangumi-info-item span {  color: #f2b94b;}.bangumi-info-item em {  color: #f2b94b;}/* 解决artitalk的图标问题 */#uploadSource > svg {  width: 1.19em;  height: 1.5em;}/*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */#page-header:not(.not-top-img):before {  background-color: transparent !important;}/* 首页文章卡片 */#recent-posts > .recent-post-item {  background: rgba(255, 255, 255, 0.9);}/* 首页侧栏卡片 */#aside-content .card-widget {  background: rgba(255, 255, 255, 0.9);}/* 文章页面正文背景 */div#post {  background: rgba(255, 255, 255, 0.9);}/* 分页页面 */div#page {  background: rgba(255, 255, 255, 0.9);}/* 归档页面 */div#archive {  background: rgba(255, 255, 255, 0.9);}/* 标签页面 */div#tag {  background: rgba(255, 255, 255, 0.9);}/* 分类页面 */div#category {  background: rgba(255, 255, 255, 0.9);}/*夜间模式伪类遮罩层透明*/[data-theme="dark"] #recent-posts > .recent-post-item {  background: #121212;}[data-theme="dark"] .card-widget {  background: #121212 !important;}[data-theme="dark"] div#post {  background: #121212 !important;}[data-theme="dark"] div#tag {  background: #121212 !important;}[data-theme="dark"] div#archive {  background: #121212 !important;}[data-theme="dark"] div#page {  background: #121212 !important;}[data-theme="dark"] div#category {  background: #121212 !important;}[data-theme="dark"] div#category {  background: transparent !important;}/* 页脚透明 */#footer {  background: transparent !important;}/* 头图透明 */#page-header {  background: transparent !important;}#rightside > div > button {  border-radius: 5px;}/* 滚动条 */::-webkit-scrollbar {  width: 10px;  height: 10px;}::-webkit-scrollbar-thumb {  background-color: #3b70fc;  border-radius: 2em;}::-webkit-scrollbar-corner {  background-color: transparent;}::-moz-selection {  color: #fff;  background-color: #3b70fc;}/* 音乐播放器 *//* .aplayer .aplayer-lrc {  display: none !important;} */.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {  left: -66px !important;  transition: all 0.3s;  /* 默认情况下缩进左侧66px，只留一点箭头部分 */}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {  left: 0 !important;  transition: all 0.3s;  /* 鼠标悬停是左侧缩进归零，完全显示按钮 */}.aplayer.aplayer-fixed {  z-index: 999999 !important;}/* 评论框  */.vwrap {  box-shadow: 2px 2px 5px #bbb;  background: rgba(255, 255, 255, 0.3);  border-radius: 8px;  padding: 30px;  margin: 30px 0px 30px 0px;}/* 设置评论框 */.vcard {  box-shadow: 2px 2px 5px #bbb;  background: rgba(255, 255, 255, 0.3);  border-radius: 8px;  padding: 30px;  margin: 30px 0px 0px 0px;}/* md网站下划线 */#article-container a:hover {  text-decoration: none !important;}#article-container #hpp_talk p img {  display: inline;}/* 404页面 */#error-wrap {  position: absolute;  top: 40%;  right: 0;  left: 0;  margin: 0 auto;  padding: 0 1rem;  max-width: 1000px;  transform: translate(0, -50%);}#error-wrap .error-content {  display: flex;  flex-direction: row;  justify-content: center;  align-items: center;  margin: 0 1rem;  height: 18rem;  border-radius: 8px;  background: var(--card-bg);  box-shadow: var(--card-box-shadow);  transition: all 0.3s;}#error-wrap .error-content .error-img {  box-flex: 1;  flex: 1;  height: 100%;  border-top-left-radius: 8px;  border-bottom-left-radius: 8px;  background-color: #3b70fc;  background-position: center;  background-size: cover;}#error-wrap .error-content .error-info {  box-flex: 1;  flex: 1;  padding: 0.5rem;  text-align: center;  font-size: 14px;  font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;}#error-wrap .error-content .error-info .error_title {  margin-top: -4rem;  font-size: 9em;}#error-wrap .error-content .error-info .error_subtitle {  margin-top: -3.5rem;  word-break: break-word;  font-size: 1.6em;}#error-wrap .error-content .error-info a {  display: inline-block;  margin-top: 0.5rem;  padding: 0.3rem 1.5rem;  background: var(--btn-bg);  color: var(--btn-color);}#body-wrap.error .aside-list {  display: flex;  flex-direction: row;  flex-wrap: nowrap;  bottom: 0px;  position: absolute;  padding: 1rem;  width: 100%;  overflow: scroll;}#body-wrap.error .aside-list .aside-list-group {  display: flex;  flex-direction: row;  flex-wrap: nowrap;  max-width: 1200px;  margin: 0 auto;}#body-wrap.error .aside-list .aside-list-item {  padding: 0.5rem;}#body-wrap.error .aside-list .aside-list-item img {  width: 100%;  object-fit: cover;  border-radius: 12px;}#body-wrap.error .aside-list .aside-list-item .thumbnail {  overflow: hidden;  width: 230px;  height: 143px;  background: var(--anzhiyu-card-bg);  display: flex;}#body-wrap.error .aside-list .aside-list-item .content .title {  -webkit-line-clamp: 2;  overflow: hidden;  display: -webkit-box;  -webkit-box-orient: vertical;  line-height: 1.5;  justify-content: center;  align-items: flex-end;  align-content: center;  padding-top: 0.5rem;  color: white;}#body-wrap.error .aside-list .aside-list-item .content time {  display: none;}/* 代码框主题 */#article-container figure.highlight {  border-radius: 10px;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友人帐</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>moves</title>
      <link href="/moves/index.html"/>
      <url>/moves/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>university</title>
      <link href="/university/index.html"/>
      <url>/university/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/ali_font.js"/>
      <url>/js/ali_font.js</url>
      
        <content type="html"><![CDATA[window._iconfont_svg_string_4181523='<svg><symbol id="icon-xinhao" viewbox="0 0 1024 1024"><path d="M160.768 702.464q33.792 0 62.976 12.8t50.688 34.816 34.304 51.2 12.8 61.952q0 33.792-12.8 62.976t-34.304 50.688-50.688 34.304-62.976 12.8q-32.768 0-61.952-12.8t-51.2-34.304-34.816-50.688-12.8-62.976q0-32.768 12.8-61.952t34.816-51.2 51.2-34.816 61.952-12.8zM66.56 377.856q119.808 0 225.792 45.568t184.32 124.416 123.904 184.832 45.568 225.792l-89.088 0q-44.032 0-83.968-1.024 0-83.968-31.744-158.208t-87.04-129.536-129.536-87.04-158.208-31.744l0-173.056zM67.584 68.608q122.88 0 236.544 31.744t212.48 89.6 179.712 139.264 138.752 180.224 89.6 211.968 31.744 236.032l-59.392 0-36.864 0q-16.384 0-30.208-0.512t-32.256-0.512q0-100.352-26.112-194.048t-73.728-174.592-114.176-147.456-147.456-113.664-174.08-73.216-193.536-26.112l0-32.768q0-24.576-0.512-50.688t-0.512-47.616l0-27.648z"/></symbol><symbol id="icon-lianjie" viewbox="0 0 1024 1024"><path d="M607.934444 417.856853c-6.179746-6.1777-12.766768-11.746532-19.554358-16.910135l-0.01228 0.011256c-6.986111-6.719028-16.47216-10.857279-26.930349-10.857279-21.464871 0-38.864146 17.400299-38.864146 38.864146 0 9.497305 3.411703 18.196431 9.071609 24.947182l-0.001023 0c0.001023 0.001023 0.00307 0.00307 0.005117 0.004093 2.718925 3.242857 5.953595 6.03853 9.585309 8.251941 3.664459 3.021823 7.261381 5.997598 10.624988 9.361205l3.203972 3.204995c40.279379 40.229237 28.254507 109.539812-12.024871 149.820214L371.157763 796.383956c-40.278355 40.229237-105.761766 40.229237-146.042167 0l-3.229554-3.231601c-40.281425-40.278355-40.281425-105.809861 0-145.991002l75.93546-75.909877c9.742898-7.733125 15.997346-19.668968 15.997346-33.072233 0-23.312962-18.898419-42.211381-42.211381-42.211381-8.797363 0-16.963347 2.693342-23.725354 7.297197-0.021489-0.045025-0.044002-0.088004-0.066515-0.134053l-0.809435 0.757247c-2.989077 2.148943-5.691629 4.669346-8.025791 7.510044l-78.913281 73.841775c-74.178443 74.229608-74.178443 195.632609 0 269.758863l3.203972 3.202948c74.178443 74.127278 195.529255 74.127278 269.707698 0l171.829484-171.880649c74.076112-74.17435 80.357166-191.184297 6.282077-265.311575L607.934444 417.856853z" fill="#5D5D5D"/><path d="M855.61957 165.804257l-3.203972-3.203972c-74.17742-74.178443-195.528232-74.178443-269.706675 0L410.87944 334.479911c-74.178443 74.178443-78.263481 181.296089-4.085038 255.522628l3.152806 3.104711c3.368724 3.367701 6.865361 6.54302 10.434653 9.588379 2.583848 2.885723 5.618974 5.355985 8.992815 7.309476 0.025583 0.020466 0.052189 0.041956 0.077771 0.062422l0.011256-0.010233c5.377474 3.092431 11.608386 4.870938 18.257829 4.870938 20.263509 0 36.68962-16.428158 36.68962-36.68962 0-5.719258-1.309832-11.132548-3.645017-15.95846l0 0c-4.850471-10.891048-13.930267-17.521049-20.210297-23.802102l-3.15383-3.102664c-40.278355-40.278355-24.982998-98.79612 15.295358-139.074476l171.930791-171.830507c40.179095-40.280402 105.685018-40.280402 145.965419 0l3.206018 3.152806c40.279379 40.281425 40.279379 105.838513 0 146.06775l-75.686796 75.737962c-10.296507 7.628748-16.97358 19.865443-16.97358 33.662681 0 23.12365 18.745946 41.87062 41.87062 41.87062 8.048303 0 15.563464-2.275833 21.944801-6.211469 0.048095 0.081864 0.093121 0.157589 0.141216 0.240477l1.173732-1.083681c3.616364-2.421142 6.828522-5.393847 9.529027-8.792247l79.766718-73.603345C929.798013 361.334535 929.798013 239.981676 855.61957 165.804257z" fill="#5D5D5D"/></symbol><symbol id="icon-yinletianchong" viewbox="0 0 1024 1024"><path d="M577.948672 39.648256 442.712064 39.648256c-226.089984 0-409.99936 183.904256-409.99936 409.99936l0 490.211328c0 8.854528 8.231936 16.101376 17.091584 16.101376L196.0448 955.96032c37.082112 0 67.233792-30.15168 67.233792-67.279872L263.278592 657.354752c0-37.087232-30.15168-67.238912-67.233792-67.238912L64.746496 590.11584 64.746496 449.64864c0-208.421888 169.54368-377.969664 377.965568-377.969664l135.237632 0c208.375808 0 377.924608 169.547776 377.924608 377.969664l0 140.468224L817.328128 590.116864c-37.087232 0-67.238912 30.15168-67.238912 67.238912l0 231.32672c0 37.128192 30.15168 67.279872 67.238912 67.279872l154.737664-0.08704c8.767488-0.091136 15.83616-7.246848 15.83616-16.01536L987.901952 449.64864C987.902976 223.553536 803.9936 39.648256 577.948672 39.648256z" fill="#FF9000"/></symbol><symbol id="icon-circleyuanquan" viewbox="0 0 1024 1024"><path d="M150.1184 150.1184C250.2656 50.0736 370.8928 0 512 0c141.1072 0 261.7344 50.0736 361.8816 150.1184C973.9264 250.2656 1024 370.8928 1024 512c0 141.2096-50.0736 261.8368-150.1184 361.8816C773.7344 973.9264 653.1072 1024 512 1024c-141.1072 0-261.7344-50.0736-361.8816-150.1184C50.0736 773.8368 0 653.2096 0 512 0 370.8928 50.0736 250.2656 150.1184 150.1184zM512 41.8816c-85.2992 0-164.1472 20.8896-236.3392 62.7712C203.4688 146.432 146.432 203.4688 104.6528 275.6608 62.7712 347.9552 41.8816 426.7008 41.8816 512c0 129.6384 45.9776 240.4352 137.8304 332.288C271.5648 936.2432 382.3616 982.1184 512 982.1184c129.6384 0 240.4352-45.8752 332.288-137.8304C936.2432 752.4352 982.1184 641.6384 982.1184 512c0-129.6384-45.9776-240.3328-137.8304-332.288C752.4352 87.7568 641.6384 41.8816 512 41.8816zM512 256c-36.1472 0-70.144 7.0656-102.1952 20.8896C377.856 290.9184 349.4912 309.3504 324.9152 332.288c-22.9376 24.576-41.472 52.9408-55.3984 84.8896S248.6272 483.328 248.6272 519.3728c0 36.1472 6.9632 70.144 20.8896 102.1952s32.4608 60.3136 55.3984 84.8896C349.4912 729.4976 377.856 747.9296 409.8048 761.856 441.856 775.7824 475.8528 782.7456 512 782.7456c36.1472 0 70.144-6.9632 102.1952-20.8896C646.144 747.9296 674.5088 729.4976 699.0848 706.4576c22.9376-24.576 41.472-52.9408 55.3984-84.8896s20.8896-66.048 20.8896-102.1952c0-36.0448-6.9632-70.144-20.8896-102.1952S722.0224 356.9664 699.0848 332.288C674.5088 309.3504 646.144 290.9184 614.1952 276.8896 582.144 263.0656 548.1472 256 512 256z"/></symbol><symbol id="icon-icon_home" viewbox="0 0 1024 1024"><path d="M640.992 928.288 384.992 928.288C384.992 928.288 384.992 741.792 384.992 640.288 384.992 623.296 391.744 607.04 403.744 595.04 415.744 583.04 432.032 576.288 448.992 576.288 488.096 576.288 537.888 576.288 576.992 576.288 593.952 576.288 610.24 583.04 622.24 595.04 634.24 607.04 640.992 623.296 640.992 640.288 640.992 741.792 640.992 928.288 640.992 928.288ZM971.264 477.792 559.232 82.464C533.632 57.888 492.192 57.824 466.496 82.464L54.464 477.792C16.224 514.496 27.904 544.288 81.184 544.288L163.296 544.288 191.2 928.64C193.952 963.648 224.96 992.288 260.448 992.288L765.568 992.288C800.928 992.288 832.032 963.808 834.816 928.64L862.688 544.288 944.544 544.288C997.568 544.288 971.264 477.792 971.264 477.792Z"/></symbol><symbol id="icon-mao" viewbox="0 0 1024 1024"><path d="M827.076923 643.544615c-5.513846 0-11.027692-1.575385-15.753846-3.938461-0.787692 0-1.575385-0.787692-1.575385-0.787692-8.664615-5.513846-14.178462-14.178462-14.966154-24.418462-7.876923-114.215385-95.310769-208.738462-208.738461-225.28-15.753846-2.363077-26.781538-15.753846-26.781539-31.507692V236.307692c0-82.707692 66.953846-149.661538 149.661539-149.661538s149.661538 66.953846 149.661538 149.661538v375.729231c0 11.027692-6.301538 21.267692-15.753846 27.569231-4.726154 2.363077-10.24 3.938462-15.753846 3.938461zM622.276923 331.618462c70.104615 16.541538 130.756923 57.501538 173.292308 113.427692V236.307692c0-48.049231-38.596923-86.646154-86.646154-86.646154s-86.646154 38.596923-86.646154 86.646154v95.31077z" fill="#7F7F7F"/><path d="M748.307692 437.956923V232.369231c0-19.692308-15.753846-35.446154-35.446154-35.446154h-8.664615C685.292308 196.923077 669.538462 212.676923 669.538462 232.369231v148.873846c29.144615 14.178462 55.926154 33.083077 78.76923 56.713846z" fill="#BFBFBF"/><path d="M196.923077 643.544615c-5.513846 0-11.027692-1.575385-15.753846-4.726153-9.452308-5.513846-15.753846-15.753846-15.753846-26.781539V236.307692c0-82.707692 66.953846-149.661538 149.661538-149.661538s149.661538 66.953846 149.661539 149.661538v121.304616c0 15.753846-11.815385 29.144615-26.781539 31.507692-113.427692 15.753846-201.649231 110.276923-208.738461 224.492308-0.787692 10.24-6.301538 19.692308-14.966154 24.418461-0.787692 0-1.575385 0.787692-2.363077 1.575385-4.726154 3.150769-9.452308 3.938462-14.966154 3.938461zM315.076923 149.661538c-48.049231 0-86.646154 38.596923-86.646154 86.646154v207.95077c42.535385-55.138462 103.187692-96.886154 173.292308-113.427693V236.307692c0-48.049231-38.596923-86.646154-86.646154-86.646154z" fill="#7F7F7F"/><path d="M354.461538 381.243077V232.369231c0-19.692308-15.753846-35.446154-35.446153-35.446154h-8.664616C291.446154 196.923077 275.692308 212.676923 275.692308 232.369231v205.587692c22.843077-23.630769 49.624615-42.535385 78.76923-56.713846z" fill="#BFBFBF"/><path d="M433.230769 819.2c-17.329231 0-31.507692-14.178462-31.507692-31.507692s14.178462-31.507692 31.507692-31.507693c25.993846 0 47.261538-21.267692 47.261539-47.261538 0-17.329231 14.178462-31.507692 31.507692-31.507692s31.507692 14.178462 31.507692 31.507692c0 60.652308-49.624615 110.276923-110.276923 110.276923z" fill="#7F7F7F"/><path d="M590.769231 819.2c-60.652308 0-110.276923-49.624615-110.276923-110.276923 0-17.329231 14.178462-31.507692 31.507692-31.507692s31.507692 14.178462 31.507692 31.507692c0 25.993846 21.267692 47.261538 47.261539 47.261538 17.329231 0 31.507692 14.178462 31.507692 31.507693s-14.178462 31.507692-31.507692 31.507692z" fill="#7F7F7F"/><path d="M748.307692 937.353846H275.692308c-103.975385 0-189.046154-85.070769-189.046154-189.046154 0-61.44 30.72-119.729231 81.132308-155.175384C185.895385 440.32 316.652308 322.953846 472.615385 322.953846h78.76923c155.963077 0 286.72 117.366154 304.836923 270.178462C906.633846 628.578462 937.353846 686.867692 937.353846 748.307692c0 103.975385-85.070769 189.046154-189.046154 189.046154zM472.615385 385.969231c-128.393846 0-234.732308 100.036923-243.396923 227.643077-0.787692 10.24-6.301538 19.692308-15.753847 25.206154C174.08 661.661538 149.661538 703.409231 149.661538 748.307692c0 69.316923 56.713846 126.030769 126.03077 126.03077h472.615384c69.316923 0 126.030769-56.713846 126.03077-126.03077 0-44.898462-24.418462-86.646154-63.803077-109.48923-9.452308-5.513846-14.966154-14.966154-15.753847-25.206154C786.116923 486.006154 679.778462 385.969231 551.384615 385.969231H472.615385z" fill="#7F7F7F"/></symbol><symbol id="icon-dog" viewbox="0 0 1024 1024"><path d="M894.814316 904.434526l83.240421-183.134315-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939369-185.263158-0.134737-7.922526-0.134737-33.953684-0.134736-55.996631-30.693053 15.306105-70.090105 19.887158-106.09179 19.887157-92.752842 0-163.624421-23.983158-210.647579-71.275789a192.512 192.512 0 0 1-27.944421-36.513684H377.263158v377.263158c342.662737 0 403.105684 51.092211 494.592 128.377263 7.922526 6.682947 15.521684 13.312 22.959158 19.86021z" fill="#85C3DE"/><path d="M326.063158 282.947368c0 34.250105-13.231158 44.463158-29.642105 44.463158s-29.642105-10.213053-29.642106-44.463158c0-34.223158 13.231158-44.463158 29.642106-44.463157s29.642105 10.24 29.642105 44.463157zM269.473684 430.295579v311.646316L190.275368 916.210526h59.203369L323.368421 753.637053V377.263158h-26.947368c-119.403789 0-172.732632-53.382737-185.505685-107.789474h35.624421c51.092211 0 68.581053-15.764211 120.535579-62.544842 12.773053-11.506526 28.079158-25.276632 47.023158-41.741474l18.351158-15.952842-69.658947-99.139368-44.085895 30.989474 41.768421 59.472842c-11.183158 9.862737-20.884211 18.593684-29.480421 26.327579C180.736 212.156632 176.235789 215.578947 146.539789 215.578947H53.894737v26.947369c0 88.710737 66.910316 178.149053 215.578947 187.769263z m216.710737-161.414737c2.290526 71.733895 28.698947 136.326737 75.048421 182.918737C618.711579 509.628632 702.437053 538.947368 810.091789 538.947368c18.593684 0 36.190316-1.158737 52.628211-3.449263 3.745684 111.265684 33.630316 170.334316 51.496421 196.015158l-38.507789 84.722526C782.174316 742.049684 688.774737 700.631579 377.263158 700.631579v53.894737c34.277053 0 65.697684 0.512 94.639158 1.509052L374.595368 970.105263h59.203369l96.013474-211.240421c66.182737 4.338526 117.005474 11.829895 157.911578 22.016L626.229895 916.210526h59.176421l54.16421-119.134315c47.616 18.405053 79.737263 42.091789 113.125053 69.739789L805.753263 970.105263h59.203369l113.071157-248.778105-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939368-185.263158C985.168842 498.553263 1024 447.811368 1024 377.263158c0-95.205053-66.506105-161.684211-161.684211-161.684211v53.894737c65.482105 0 107.789474 42.307368 107.789474 107.789474 0 89.088-87.013053 107.789474-160.013474 107.789474-92.752842 0-163.624421-23.983158-210.647578-71.27579-30.315789-30.504421-45.891368-65.832421-53.35579-98.735158 11.210105 6.952421 22.932211 13.338947 35.274105 19.186527l23.04-48.720843c-92.106105-43.654737-148.992-128.646737-219.243789-243.981473l-46.026105 28.05221c49.448421 81.246316 92.968421 148.506947 147.051789 199.302737z" fill="#231F20"/></symbol><symbol id="icon-rooster" viewbox="0 0 1024 1024"><path d="M891.688421 506.421895C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V116.224l-323.368421 195.745684V323.368421c0 78.524632 14.928842 131.664842 29.372632 183.053474 12.611368 44.894316 24.522105 87.282526 24.522105 140.314947 0 101.618526-77.931789 176.693895-168.286316 203.991579l5.416422 11.587368h215.578947c24.333474 0 43.385263-0.242526 58.556631-2.128842C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947z" fill="#FF8787"/><path d="M673.684211 354.357895c-16.384 0-29.642105-10.213053-29.642106-44.463158 0-34.223158 13.231158-44.463158 29.642106-44.463158s29.642105 10.24 29.642105 44.463158c0 34.250105-13.258105 44.463158-29.642105 44.463158zM540.106105 970.105263l-50.58021-107.789474h156.05221l50.607158 107.789474h59.553684l-51.60421-109.918316C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V107.789474c0-59.445895-48.343579-107.789474-107.789473-107.789474a107.924211 107.924211 0 0 0-107.789474 106.172632 100.890947 100.890947 0 0 0-24.117895-3.314527 88.710737 88.710737 0 0 0-88.602947 88.602948c0 20.668632 5.227789 39.720421 10.671158 53.921684l-99.489684 59.688421 93.749894 14.470737V377.263158c0 14.416842-5.901474 21.692632-33.360842 49.152l-11.129263 11.129263C398.228211 326.521263 324.985263 269.473684 215.740632 269.473684 96.768 269.473684 0 366.241684 0 485.214316V646.736842h53.894737v-161.522526A162.007579 162.007579 0 0 1 215.740632 323.368421c82.081684 0 140.422737 36.244211 240.64 152.252632l-38.615579 38.615579C367.804632 461.285053 323.098947 431.157895 259.584 431.157895A151.983158 151.983158 0 0 0 107.789474 582.952421V754.526316h53.894737v-171.573895A98.007579 98.007579 0 0 1 259.584 485.052632c46.322526 0 79.629474 20.911158 137.027368 86.016l18.970948 21.530947 128.080842-128.080842C572.200421 435.981474 592.842105 415.366737 592.842105 377.263158v-97.926737l23.309474-14.120421-13.662316-23.04c-0.161684-0.242526-14.578526-24.899368-14.578526-50.688 0-19.132632 15.575579-34.708211 34.70821-34.708211 5.093053 0 26.785684 3.179789 39.558737 18.647579l26.327579 46.026106 39.774316-24.090948-20.372211-49.367579C704.754526 140.449684 700.631579 117.517474 700.631579 107.789474c0-29.722947 24.171789-53.894737 53.894737-53.894737s53.894737 24.171789 53.894737 53.894737v215.578947c0 85.935158 16.680421 145.300211 31.366736 197.632C851.887158 564.008421 862.315789 601.141895 862.315789 646.736842c0 95.285895-99.408842 161.684211-188.631578 161.684211h-209.461895l-68.419369-145.704421C375.242105 618.954105 338.108632 592.842105 296.448 592.842105A80.976842 80.976842 0 0 0 215.578947 673.711158V862.315789h53.894737v-188.604631c0-14.874947 12.099368-26.974316 26.974316-26.974316 20.533895 0 38.965895 14.147368 50.553263 38.858105L480.579368 970.105263h59.526737z" fill="#231F20"/></symbol><symbol id="icon-snake_si" viewbox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787"/><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-242.041263 180.762947l-52.116211-13.797052C657.219368 749.864421 651.425684 754.526316 619.789474 754.526316h-242.526316V485.052632h269.473684v53.894736h53.894737V215.578947H323.368421v538.947369c0 29.722947 24.171789 53.894737 53.894737 53.894737h242.526316c77.689263 0 91.189895-51.065263 108.274526-115.658106zM377.263158 269.473684h269.473684v161.684211H377.263158v-161.684211z" fill="#231F20"/></symbol><symbol id="icon-snake" viewbox="0 0 1024 1024"><path d="M107.789474 790.474105c0-72.434526 67.880421-91.513263 121.451789-91.513263 74.401684 0 153.815579 34.438737 237.891369 70.925474 50.580211 21.935158 104.609684 45.325474 162.250105 63.083789-52.412632 44.786526-118.784 74.347789-195.152842 83.078737-143.171368 16.357053-326.440421 7.006316-326.440421-125.574737zM377.263158 215.578947c-15.575579 0-30.288842 3.449263-43.654737 9.377685A250.691368 250.691368 0 0 0 323.368421 296.421053c0 115.550316 76.422737 169.391158 137.83579 212.614736 8.138105 5.712842 16.141474 11.371789 23.848421 17.057685V323.368421a107.789474 107.789474 0 0 0-107.789474-107.789474z" fill="#C3D686"/><path d="M671.528421 788.857263c44.328421 11.964632 89.626947 19.563789 136.892632 19.56379 89.168842 0 161.684211-60.442947 161.68421-134.736842s-72.515368-134.736842-161.68421-134.736843c-19.078737 0-37.025684 1.509053-54.218106 4.015158-0.754526-101.402947-38.211368-172.355368-79.413894-219.648L673.684211 323.368421a1749.962105 1749.962105 0 0 1-79.036632-1.751579c45.702737 35.866947 108.705684 107.870316 105.984 232.367158 0 0.431158-0.080842 0.808421-0.10779 1.239579-34.923789 10.994526-66.155789 26.731789-95.097263 45.190737a163.085474 163.085474 0 0 0-15.845052-42.388211c-21.557895-39.639579-60.065684-66.775579-97.360842-93.022316C433.098105 423.343158 377.263158 384 377.263158 296.421053c0-130.290526 108.274526-188.631579 215.578947-188.631579 64.134737 0 132.715789 12.045474 214.366316 37.807158C802.330947 180.250947 780.099368 209.381053 700.631579 214.635789V161.684211h-53.894737v53.679157c-63.272421-1.024-104.528842-5.200842-104.986947-5.254736l-5.578106 53.598315C538.408421 263.949474 592.357053 269.473684 673.684211 269.473684c125.170526 0 188.631579-48.128 188.631578-143.063579V106.981053l-18.432-6.144C747.789474 68.823579 668.025263 53.894737 592.842105 53.894737c-158.666105 0-269.473684 99.732211-269.473684 242.526316 0 115.550316 76.422737 169.391158 137.83579 212.614736 33.684211 23.713684 65.509053 46.106947 81.003789 74.698106 9.539368 17.542737 13.285053 33.414737 12.341895 47.750737 21.153684 9.108211 42.118737 17.839158 62.949052 25.977263C671.151158 620.193684 729.977263 592.842105 808.421053 592.842105c59.445895 0 107.789474 36.271158 107.789473 80.842106s-48.343579 80.842105-107.789473 80.842105c-105.472 0-203.237053-42.388211-297.768421-83.429053-94.800842-41.094737-184.346947-79.952842-281.411369-79.952842C122.718316 591.171368 53.894737 644.715789 53.894737 727.578947c0 79.063579 67.098947 136.434526 159.555368 136.434527 142.174316 0 230.426947-66.883368 306.79579-129.886316 31.420632 13.419789 62.787368 26.058105 94.450526 37.133474-47.077053 49.637053-110.969263 82.566737-186.610526 91.270736l5.066105 53.625264c93.453474-7.006316 143.144421 9.350737 195.718737 26.543157 46.457263 15.225263 94.127158 30.854737 169.822316 30.854737 19.994947 0 41.957053-1.077895 66.344421-3.557052l-5.416421-53.625263c-105.283368 10.778947-158.100211-6.548211-213.935158-24.872422-22.150737-7.275789-44.624842-14.632421-70.305684-20.345263a334.848 334.848 0 0 0 96.14821-82.297263z m-458.078316 21.261474C162.573474 810.118737 107.789474 784.276211 107.789474 727.578947c0-60.847158 62.733474-82.539789 121.451789-82.539789 77.850947 0 154.731789 30.288842 235.250526 64.943158-66.263579 52.924632-139.722105 100.136421-251.041684 100.136421z" fill="#231F20"/></symbol><symbol id="icon-tiger" viewbox="0 0 1024 1024"><path d="M431.157895 162.250105V134.736842c0-41.552842-39.289263-80.842105-80.842106-80.842105-28.833684 0-57.128421 4.661895-58.314105 4.850526L269.473684 62.490947v83.887158C144.788211 223.824842 89.222737 346.839579 66.991158 431.157895h266.051368c240.747789 0 415.851789 107.789474 415.85179 269.473684-14.848-25.114947-43.924211-53.894737-88.68379-53.894737-67.988211 0-121.263158 71.033263-121.263158 161.684211 0 66.802526 30.477474 119.888842 60.712421 156.16 12.638316 15.171368 36.055579 37.726316 59.014737 58.88 5.066105 0.107789 9.781895 0.538947 15.009685 0.538947 219.297684 0 350.315789-191.811368 350.315789-377.263158C1024 327.545263 679.855158 172.813474 431.157895 162.250105z" fill="#F7C768"/><path d="M673.684211 1024c-114.768842 0-188.820211-33.333895-254.167579-62.787368-53.625263-24.144842-99.974737-45.002105-161.28-45.002106-40.448 0-83.590737 23.255579-103.639579 45.16379l-39.747369-36.432842C142.497684 894.787368 199.168 862.315789 258.236632 862.315789c68.392421 0 119.861895 21.288421 172.921263 45.056V673.684211c0-35.166316-17.542737-64.107789-30.639158-80.815158-15.198316 9.835789-32.067368 18.890105-50.741895 26.947368l-21.342316-49.475368C469.800421 509.413053 485.052632 377.317053 485.052632 323.368421V221.642105A597.827368 597.827368 0 0 0 404.210526 215.578947h-26.947368V134.736842c0-12.099368-14.848-26.947368-26.947369-26.947368-9.377684 0-18.836211 0.592842-26.947368 1.347368V269.473684h-53.894737V211.671579c-136.030316 102.912-158.450526 266.886737-161.306947 295.882105 9.135158 9.108211 38.992842 25.061053 71.976421 38.669474l38.103579-59.365053 12.449684-1.589894C321.212632 473.653895 377.263158 392.192 377.263158 323.368421h53.894737c0 88.333474-68.796632 192.242526-180.870737 213.342316l-48.397474 75.398737-20.291368-7.437474C53.894737 557.756632 53.894737 523.317895 53.894737 512c0-50.041263 37.025684-254.733474 215.578947-365.621895V62.490947l22.528-3.745684C293.187368 58.556632 321.482105 53.894737 350.315789 53.894737c41.552842 0 80.842105 39.289263 80.842106 80.842105v27.513263c248.697263 10.563368 592.842105 165.295158 592.842105 484.486737 0 185.451789-131.018105 377.263158-350.315789 377.263158z m-13.473685-323.368421c-36.513684 0-67.368421 49.367579-67.368421 107.789474 0 85.746526 68.096 145.084632 89.465263 161.549473 91.540211-2.533053 164.378947-45.487158 213.827369-107.654737H700.631579v-53.894736h230.238316c8.919579-17.273263 16.357053-35.354947 22.285473-53.894737h-239.885473l-6.467369-17.650527C706.290526 735.582316 692.439579 700.631579 660.210526 700.631579zM485.052632 931.112421c33.926737 14.066526 70.521263 26.597053 114.607157 33.468632C569.424842 928.309895 538.947368 875.223579 538.947368 808.421053c0-90.650947 53.274947-161.684211 121.263158-161.684211 44.759579 0 73.835789 28.779789 88.68379 53.894737h217.007158c2.775579-17.866105 4.203789-35.920842 4.203789-53.894737 0-38.938947-5.658947-74.752-15.925895-107.627789l-126.706526 126.679579-38.103579-38.103579L932.001684 485.052632a367.939368 367.939368 0 0 0-57.775158-81.596632l-154.543158 154.543158-38.103579-38.103579 153.573053-153.573053a537.869474 537.869474 0 0 0-82.593684-56.751158l-140.665263 140.638316-38.103579-38.103579 128.134737-128.134737A794.731789 794.731789 0 0 0 538.947368 231.046737V323.368421c0 50.149053-11.102316 156.698947-95.932631 236.328421 18.378105 23.417263 42.037895 63.407158 42.037895 113.987369v257.42821zM215.578947 431.157895v-53.894737c39.774316 0 53.894737-29.022316 53.894737-53.894737h53.894737c0 53.571368-37.025684 107.789474-107.789474 107.789474z" fill="#231F20"/></symbol><symbol id="icon-zhifeiji" viewbox="0 0 1024 1024"><path d="M281.9 536.2L294 816.7l72.4-164z" fill="#5CCFEA"/><path d="M294 834.1c-1.1 0-2.1-0.1-3.2-0.3-7.9-1.5-13.8-8.3-14.2-16.4l-12.1-280.5c-0.3-7.7 4.4-14.7 11.7-17.2 7.2-2.5 15.3 0 19.8 6.2l84.4 116.5c3.6 5 4.3 11.6 1.8 17.2l-72.4 164c-2.7 6.5-9 10.5-15.8 10.5z m7.8-240.8l6.4 148.1 38.2-86.6-44.6-61.5z" fill="#4C4848"/><path d="M910.3 180.3L505.2 844.2 113.9 304.4z" fill="#80D4EE"/><path d="M505.2 861.6c-5.6 0-10.8-2.7-14.1-7.2L99.8 314.6c-3.6-4.9-4.3-11.3-2-16.9 2.3-5.6 7.4-9.6 13.4-10.5l796.3-124.1c6.8-1 13.4 1.9 17.2 7.5 3.8 5.6 3.9 12.9 0.4 18.7L520 853.3c-3 5-8.3 8.1-14.2 8.3h-0.6zM144.7 317.2l359.2 495.6 371.9-609.5-731.1 113.9z" fill="#4C4848"/><path d="M910.3 180.3L366.4 652.7l-84.5-116.5z" fill="#5CCFEA"/><path d="M366.4 670.1c-0.7 0-1.3 0-2-0.1-4.8-0.6-9.2-3.1-12.1-7.1l-84.4-116.5c-2.9-4-4-9.1-2.9-13.9 1.1-4.8 4.1-9 8.4-11.5l628.3-355.9c7.8-4.4 17.6-2.2 22.8 5.1 5.2 7.3 4 17.3-2.8 23.2L377.8 665.8c-3.2 2.8-7.3 4.3-11.4 4.3z m-59-128.4l61.9 85.3 398.4-346-460.3 260.7z" fill="#4C4848"/><path d="M408.6 711L297.1 811.4l69.3-158.7z" fill="#5CCFEA"/><path d="M297.1 828.8c-3.6 0-7.1-1.1-10.2-3.3-6.6-4.8-9-13.6-5.8-21.1l69.2-158.7c2.5-5.7 7.9-9.7 14.1-10.3 6.3-0.7 12.3 2 16 7.1l42.2 58.3c5.2 7.2 4.2 17.2-2.4 23.1L308.8 824.3c-3.3 3-7.5 4.5-11.7 4.5z m73-141.2l-24.9 57 40-36.1-15.1-20.9z" fill="#4C4848"/></symbol><symbol id="icon-tu" viewbox="0 0 1024 1024"><path d="M627.1 552.9h-77.6V103.3c0-14.7 8.3-28.2 21.5-34.7 13.1-6.6 28.9-5.1 40.7 3.7 113.1 85.1 171.9 184.3 174.6 294.8-2.9 78.3-46 121.8-118.4 121.8v-77.6c25.9 0 39.4-6.9 40.8-44.7-1.7-63.3-28.5-122.2-81.6-177.8v364.1zM475.9 552.9h-77.6v-364c-53.2 55.7-80 115.1-81.6 180.2 1.4 35.3 14.9 42.2 40.8 42.2v77.6c-72.3 0-115.4-43.5-118.3-119.3 2.7-113 61.5-212.2 174.6-297.3 11.7-8.8 27.6-10.2 40.7-3.7 13.2 6.6 21.5 20 21.5 34.7v449.6h-0.1z" fill="#7BF2FC"/><path d="M662.3 957H359.1c-85.6 0-155.2-69.6-155.2-155.2 0-34 11.4-67.6 32.2-94.6L326.2 590c78.3-101.7 224.7-120.8 326.5-42.6 16.1 12.4 30.4 26.7 42.6 42.6l90.1 117.1c25.3 32.9 36.3 73.6 30.9 114.7-5.4 41.1-26.4 77.7-59.3 102.9-27 20.8-60.6 32.3-94.7 32.3zM510.9 576.8c-46.6 0-92.7 20.8-123.2 60.5l-90.1 117.1c-10.4 13.5-16.1 30.3-16.1 47.3 0 42.8 34.8 77.6 77.6 77.6h303.2c17 0 33.8-5.7 47.3-16.1 16.4-12.7 26.9-30.9 29.6-51.5 2.7-20.5-2.8-40.9-15.4-57.3l-90.1-117.2c-8.1-10.6-17.7-20.2-28.4-28.4-28.1-21.5-61.3-32-94.4-32z" fill="#66B2F6"/><path d="M433.1 724.1m-38.8 0a38.8 38.8 0 1 0 77.6 0 38.8 38.8 0 1 0-77.6 0Z" fill="#7EDBFE"/><path d="M588.3 724.1m-38.8 0a38.8 38.8 0 1 0 77.6 0 38.8 38.8 0 1 0-77.6 0Z" fill="#7EDBFE"/></symbol><symbol id="icon-long" viewbox="0 0 1024 1024"><path d="M362.4 251.4H212.9v-74.8h74.7V64.5h74.8zM810.9 251.4H661.4V64.5h74.7v112.1h74.8z" fill="#7BF2FC"/><path d="M511.9 759.4L266 711c-52.4-10.3-90.5-56.6-90.5-110v-13.3c0-61.8 50.3-112.1 112.1-112.1h448.5c61.8 0 112.1 50.3 112.1 112.1V601c0 53.4-38.1 99.7-90.5 110l-245.8 48.4zM287.6 550.3c-20.6 0-37.4 16.8-37.4 37.4V601c0 17.8 12.7 33.2 30.2 36.7l231.4 45.5 231.4-45.5c17.5-3.4 30.2-18.9 30.2-36.7v-13.3c0-20.6-16.8-37.4-37.4-37.4H287.6zM567.9 961.5H455.8c-51.5 0-93.4-41.9-93.4-93.4s41.9-93.4 93.4-93.4h112.1c51.5 0 93.4 41.9 93.4 93.4 0.1 51.4-41.8 93.4-93.4 93.4zM455.8 849.3c-10.3 0-18.7 8.4-18.7 18.7s8.4 18.7 18.7 18.7h112.1c10.3 0 18.7-8.4 18.7-18.7s-8.4-18.7-18.7-18.7H455.8z" fill="#66B2F6"/><path d="M511.9 326.1c41.3 0 74.7 33.5 74.7 74.7v373.7c0 41.3-33.5 74.7-74.7 74.7-41.3 0-74.7-33.5-74.7-74.7V400.9c-0.1-41.3 33.4-74.8 74.7-74.8z" fill="#7EDBFE"/><path d="M362.4 400.9m-37.4 0a37.4 37.4 0 1 0 74.8 0 37.4 37.4 0 1 0-74.8 0Z" fill="#7EDBFE"/><path d="M661.4 400.9m-37.4 0a37.4 37.4 0 1 0 74.8 0 37.4 37.4 0 1 0-74.8 0Z" fill="#7EDBFE"/><path d="M347.1 312.6l-65.8-35.4c45.7-85.1 134.1-138 230.6-138 96.3 0 184.5 52.6 230.3 137.4l-65.8 35.5c-32.7-60.5-95.7-98.2-164.5-98.2-69 0.1-132.1 37.9-164.8 98.7z" fill="#66B2F6"/><path d="M761.2 513h-5.6l1.1-74.7c46.5 0.4 81.2-9 101.3-28.8 11.3-11.1 19-26.5 23.2-45.9h-145v-74.7h223.4v37.4c0 58.5-16.5 104.5-49 136.5-34.1 33.3-84.3 50.2-149.4 50.2zM262.3 513c-65 0-115-16.9-148.9-50.2-32.6-32.1-49.1-78-49.1-136.7v-37.4h223.4v74.7h-145c4.1 19.5 11.9 34.9 23.2 46 20.1 19.8 55.4 30.1 101.2 28.7l1.2 74.7c-2.1 0.2-4 0.2-6 0.2z" fill="#7BF2FC"/><path d="M661.4 550.3c-82.4 0-149.5-67.1-149.5-149.5s67-149.5 149.5-149.5 149.5 67.1 149.5 149.5-67.1 149.5-149.5 149.5z m0-224.2c-41.2 0-74.7 33.5-74.7 74.7s33.5 74.7 74.7 74.7 74.7-33.5 74.7-74.7-33.5-74.7-74.7-74.7zM362.4 550.3c-82.4 0-149.5-67.1-149.5-149.5s67-149.5 149.5-149.5 149.5 67.1 149.5 149.5-67.1 149.5-149.5 149.5z m0-224.2c-41.2 0-74.7 33.5-74.7 74.7s33.5 74.7 74.7 74.7 74.7-33.5 74.7-74.7-33.5-74.7-74.7-74.7z" fill="#66B2F6"/></symbol><symbol id="icon-chou" viewbox="0 0 1024 1024"><path d="M513.6 510.8z m-288.8 0c0 159.5 129.3 288.8 288.8 288.8s288.8-129.3 288.8-288.8S673.1 222 513.6 222 224.8 351.3 224.8 510.8" fill="#7BF2FC"/><path d="M959.9 510.8c0 219.2-159 401.6-367.5 438.9v-53.1c179.5-36.6 315-195.7 315-385.9 0-217.1-176.7-393.8-393.8-393.8S119.8 293.7 119.8 510.8s176.7 393.8 393.8 393.8c8.8 0 17.5-0.7 26.3-1.3v52.5c-8.7 0.5-17.4 1.3-26.3 1.3-246.1 0-446.3-200.2-446.3-446.3S267.5 64.5 513.6 64.5s446.3 200.2 446.3 446.3zM802.4 694.6H647c13.6-168.4 42-348.2 69-375.2l-18.6-44.8H329.9V327h104.4c-1.9 44.6-8 101.3-15.4 157.5h-89.1V537h81.8c-9.6 66.7-19.7 126.8-25.1 157.5H224.8V747h577.6v-52.4zM464.8 537.1h145.9c-6.8 52.4-12.2 104.9-16.4 157.5H439.9c5.9-34.4 15.7-93.2 24.9-157.5z m22-210.1h167.3c-14.8 40.1-26.7 98-35.9 157.5H471.9c7.2-56 13.1-112.3 14.9-157.5z" fill="#66B2F6"/></symbol><symbol id="icon-yin" viewbox="0 0 1024 1024"><path d="M513.1 511.3z m-289.1 0c0 159.7 129.4 289.1 289.1 289.1S802.2 671 802.2 511.3 672.8 222.2 513.1 222.2 224 351.6 224 511.3" fill="#7BF2FC"/><path d="M959.9 511.3c0 219.4-159.1 402-368 439.4v-53.1C771.7 861 907.4 701.7 907.4 511.3c0-217.4-176.9-394.2-394.2-394.2S118.9 293.9 118.9 511.3s176.9 394.2 394.2 394.2c8.9 0 17.6-0.7 26.3-1.3v52.6c-8.8 0.5-17.4 1.3-26.3 1.3-246.4 0-446.8-200.4-446.8-446.8S266.8 64.5 513.1 64.5s446.8 200.4 446.8 446.8z m-251 291.9l-105.1-52.6-23.5 47 105.1 52.6 23.5-47zM446 797.6l-23.5-47-105.1 52.6 23.5 47L446 797.6z m251.1-365.1H539.4v-52.6h105.1v-52.6H381.7v52.6h105.1v52.6H329.2v315.4h52.6v-52.6h262.8v52.6h52.6V432.5h-0.1zM539.4 590.1h105.1v52.6H539.4v-52.6z m-157.7 0h105.1v52.6H381.7v-52.6zM539.4 485h105.1v52.6H539.4V485z m-157.7 0h105.1v52.6H381.7V485z m368-262.8H532.1l-20.3-60.9-49.9 16.7 14.7 44.2h-200v105.1h52.6v-52.6h368v52.6h52.6V222.2h-0.1z" fill="#66B2F6"/></symbol><symbol id="icon-chen" viewbox="0 0 1024 1024"><path d="M511.8 509.8z m-289.1 0c0 159.7 129.4 289.1 289.1 289.1s289.1-129.4 289.1-289.1-129.4-289.1-289.1-289.1-289.1 129.4-289.1 289.1" fill="#7BF2FC"/><path d="M958.6 509.8c0 219.4-159.1 402-368 439.4v-53.1C770.4 859.5 906 700.2 906 509.8c0-217.4-176.9-394.3-394.3-394.3S117.5 292.4 117.5 509.8s176.9 394.3 394.3 394.3c8.9 0 17.6-0.7 26.3-1.3v52.6c-8.8 0.5-17.4 1.3-26.3 1.3C265.4 956.6 65 756.2 65 509.8S265.4 63 511.8 63s446.8 200.4 446.8 446.8zM472.7 768.9l-39.8-22.5V483.5h-64.4c-14.1 107.9-43.3 192.2-100.2 254.3l-38.8-35.5c81.8-89.2 98.2-240.4 98.2-455.3v-26.3h368v52.6H380.3c-0.4 56.8-2.2 109.4-6.2 157.7h321.7v52.6H576.6c19.1 42.4 44.3 81.8 74.9 116.8l64.8-38.9 27 45.1-53.1 31.9c28.8 24.3 62.2 44.5 100.3 56.7l-15.9 50.1c-130.9-41.7-217.3-163-255.1-261.6h-34.1v216.4l67.3-40.4 27 45.1-107 64.1z m170.5-390.5H432.9v-52.6h210.3v52.6z" fill="#66B2F6"/></symbol><symbol id="icon-wu" viewbox="0 0 1024 1024"><path d="M510.1 510z m-288.2 0c0 159.2 129.1 288.2 288.2 288.2s288.3-129 288.3-288.2-129.1-288.3-288.3-288.3S221.9 350.8 221.9 510" fill="#7BF2FC"/><path d="M955.6 510c0 218.8-158.7 400.8-366.9 438.1v-53C768 858.6 903.2 699.8 903.2 510c0-216.7-176.3-393.1-393.1-393.1s-393 176.3-393 393.1 176.3 393 393 393c8.8 0 17.5-0.7 26.2-1.3v52.4c-8.7 0.5-17.4 1.3-26.2 1.3-245.6 0-445.4-199.8-445.4-445.4S264.5 64.5 510.1 64.5 955.6 264.3 955.6 510z m-419.3 26.2h262v-52.4h-262V326.5h157.2v-52.4H411.9c11.7-32.4 19.6-67.9 19.6-104.8h-52.4c0 118.6-102.5 227-103.5 228l37.8 36.3c2.8-2.9 42.6-44.9 75.3-107.1H484v157.2H222v52.4h262v314.4h52.4V536.2h-0.1z" fill="#66B2F6"/></symbol><symbol id="icon-wei" viewbox="0 0 1024 1024"><path d="M511.9 512.2z m-288.7 0c0 159.5 129.3 288.7 288.7 288.7s288.7-129.3 288.7-288.7-129.2-288.7-288.7-288.7-288.7 129.3-288.7 288.7" fill="#7BF2FC"/><path d="M958.1 512.2c0 219.2-158.9 401.5-367.5 438.9v-53c179.5-36.6 315-195.7 315-385.8 0-217.1-176.6-393.7-393.7-393.7S118.2 295.1 118.2 512.2 294.8 906 511.9 906c8.8 0 17.5-0.7 26.2-1.3v52.5c-8.7 0.5-17.4 1.3-26.2 1.3-246.1 0-446.2-200.2-446.2-446.2S265.8 66 511.9 66s446.2 200.2 446.2 446.2z m-420 48.9c50.9 69.1 133.4 148.2 226.5 185.4l19.5-48.7C677.7 655.3 586.6 549.2 551.5 486h249.1v-52.5H538.1V381h210v-52.5h-210V171h-52.5v157.5h-210V381h210v52.5H223.2V486h249.1c-35 63.2-126.2 169.3-232.6 211.9l19.5 48.7c93.1-37.2 175.5-116.4 226.5-185.4V801h52.5V561.1h-0.1z" fill="#66B2F6"/></symbol><symbol id="icon-you" viewbox="0 0 1024 1024"><path d="M512.2 510.7z m-289.7 0c0 160 129.7 289.7 289.7 289.7s289.7-129.7 289.7-289.7S672.2 221 512.2 221 222.5 350.7 222.5 510.7" fill="#7BF2FC"/><path d="M959.9 510.7c0 219.9-159.5 402.8-368.7 440.3v-53.2c180.1-36.7 316-196.3 316-387.1 0-217.8-177.2-395.1-395.1-395.1S117.2 292.9 117.2 510.7s177.2 395.1 395.1 395.1c8.9 0 17.6-0.7 26.3-1.3v52.7c-8.8 0.5-17.5 1.3-26.3 1.3-246.9 0-447.7-200.8-447.7-447.7S265.3 63 512.2 63s447.7 200.8 447.7 447.7zM749.2 326.4h-158V300h158v-52.7h-474V300h158v26.3h-158v474.1h52.7v-52.7h368.7v52.7h52.7v-474h-0.1z m-421.4 316h368.7v52.7H327.8v-52.7z m0-263.4h105.3c0 101-71.1 105.2-79.2 105.3l0.2 52.7c45.5 0 131.7-33 131.7-158h52.7v105.3c0 29 23.6 52.7 52.7 52.7h105.3v52.7H327.8V379z m368.8 0v105.3H591.2V379h105.4z m-210.7-79h52.7v26.3h-52.7V300z" fill="#66B2F6"/></symbol><symbol id="icon-xu" viewbox="0 0 1024 1024"><path d="M510.7 513.7z m-289.7 0c0 160 129.7 289.7 289.7 289.7s289.7-129.7 289.7-289.7S670.7 224 510.7 224 221 353.7 221 513.7" fill="#7BF2FC"/><path d="M958.4 513.7c0 219.9-159.5 402.8-368.7 440.3v-53.2c180.1-36.7 316-196.3 316-387.1 0-217.8-177.2-395.1-395.1-395.1S115.7 295.9 115.7 513.7s177.2 395.1 395.1 395.1c8.9 0 17.6-0.7 26.3-1.3v52.7c-8.8 0.5-17.5 1.3-26.3 1.3-247 0-447.8-200.9-447.8-447.8S263.8 66 510.7 66s447.7 200.8 447.7 447.7z m-367.1 147c32.9 43.5 73.5 73 121.9 88.8l11.2 3.6 10.2-5.9c39.2-22.6 65.8-125.4 65.8-154.5h-52.7c0 21.6-18.7 79-32.9 101.2-34-14.3-63.1-38.4-87.2-72.5 47.2-54 90-114.7 117.8-175.8l-47.9-21.8C674.2 474.9 639 526.2 599.6 573c-23.5-49.8-40.2-113.3-50.5-191H695v-52.7H543.4c-4.4-52.6-6.5-105.3-6.3-158h-52.7c0 56.9 2.1 109.5 6.3 158H326.3v26.3c0 211.6-12.9 257.6-98.4 350.9l38.8 35.6c61.9-67.5 90.7-115.6 103.3-202.2h114.3v-52.7H375.6c2.2-35.1 3.3-70.2 3.4-105.3h117.4c12.3 96 34.2 173.5 65.9 232.8-60.6 64.1-125.2 115.3-169.4 139.1l24.9 46.4c46.5-24.9 111.5-75.6 173.5-139.5z m122.4-402.6l-79-79-37.2 37.2 79 79 37.2-37.2z" fill="#66B2F6"/></symbol><symbol id="icon-QQ-circle-fill" viewbox="0 0 1024 1024"><path d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64z m210.5 612.4c-11.5 1.4-44.9-52.7-44.9-52.7 0 31.3-16.2 72.2-51.1 101.8 16.9 5.2 54.9 19.2 45.9 34.4-7.3 12.3-125.6 7.9-159.8 4-34.2 3.8-152.5 8.3-159.8-4-9.1-15.2 28.9-29.2 45.8-34.4-35-29.5-51.1-70.4-51.1-101.8 0 0-33.4 54.1-44.9 52.7-5.4-0.7-12.4-29.6 9.4-99.7 10.3-33 22-60.5 40.2-105.8-3.1-116.9 45.3-215 160.4-215 113.9 0 163.3 96.1 160.4 215 18.1 45.2 29.9 72.8 40.2 105.8 21.7 70.1 14.6 99.1 9.3 99.7z"/></symbol><symbol id="icon-niu" viewbox="0 0 1024 1024"><path d="M297.9 632.7h475.2V850H297.9z" fill="#B2BBC5"/><path d="M943.2 305c0-80.9-92-139.4-146.3-161.2l-47.6-19.1-0.2 51.3c-0.3 76.4-26.8 115.2-78.7 115.2H400.8c-83.5 0-90.4-88.1-90.5-115.2l-0.2-51.3-47.6 19.1c-64.8 26-134.6 87.5-134.6 161.2 0 39.9 13.7 76.6 36.4 106v80.1c0 61.3 50.4 111.4 113.5 114.4v46.8c-16.8 24.9-26.6 54.9-26.6 87.2v3.4c0 86.2 70.1 156.3 156.3 156.3h256.1c86.2 0 156.3-70.1 156.3-156.3v-3.4c0-32.2-9.8-62.2-26.6-87.2v-46.8c63.1-3 113.5-53.1 113.5-114.4V411c22.7-29.4 36.4-66.1 36.4-106z m-696.5-73.1C265.1 311 322.5 361 400.8 361h269.5c76.8 0 128.1-47.6 143.6-129.9 33 21.5 59.6 49.8 59.6 74 0 57.3-46.6 103.9-103.9 103.9h-468c-57.3 0-103.9-46.6-103.9-103.9 0-25.6 21.3-52.8 49-73.2z m100.8 246.8h376v116.4c-18.5-7.7-38.7-12-59.9-12H407.5c-21.2 0-41.5 4.3-60 12V478.7zM234 491.1V465c13.7 5.8 28.5 9.7 43.7 11.8v58.7c-24.5-2.7-43.7-21.4-43.7-44.4z m516.2 251.8c0 47.7-38.8 86.6-86.6 86.6H407.5c-47.7 0-86.6-38.8-86.6-86.6v-3.4c0-47.7 38.8-86.6 86.6-86.6h256.1c23.3 0 44.4 9.4 59.9 24.4v1.4h1.6c15.5 15.6 25 37.1 25 60.8v3.4z m43.1-207.3v-58.7c15.3-2.1 30-6 43.7-11.8v26.1c0.1 22.9-19.1 41.6-43.7 44.4z" fill="#242529"/><path d="M455.3 740.4m-34.9 0a34.9 34.9 0 1 0 69.8 0 34.9 34.9 0 1 0-69.8 0Z" fill="#242529"/><path d="M615.8 740.4m-34.9 0a34.9 34.9 0 1 0 69.8 0 34.9 34.9 0 1 0-69.8 0Z" fill="#242529"/></symbol><symbol id="icon-24gf-mailboxFull" viewbox="0 0 1024 1024"><path d="M981.333333 362.666667v384a21.333333 21.333333 0 0 1-21.333333 21.333333H597.333333v192a21.333333 21.333333 0 0 1-21.333333 21.333333H405.333333a21.333333 21.333333 0 0 1-21.333333-21.333333v-192H170.666667v5.333333a37.373333 37.373333 0 0 1-37.333334 37.333334h-53.333333a37.373333 37.373333 0 0 1-37.333333-37.333334V208a37.373333 37.373333 0 0 1 37.333333-37.333333h53.333333a37.373333 37.373333 0 0 1 37.333334 37.333333v5.333333h128v192a21.333333 21.333333 0 0 0 21.333333 21.333334h85.333333a21.333333 21.333333 0 0 0 0-42.666667h-64V213.333333h490.666667a149.333333 149.333333 0 0 1 149.333333 149.333334zM341.333333 170.666667h85.333334a85.333333 85.333333 0 0 0 0-170.666667H320a21.333333 21.333333 0 0 0-21.333333 21.333333v192h42.666666z" fill="#5C5C66"/></symbol><symbol id="icon-xinfeng" viewbox="0 0 1024 1024"><path d="M829.64898 805.093878H194.35102c-43.885714 0-79.412245-35.526531-79.412244-79.412245V298.840816C114.938776 254.955102 150.465306 219.428571 194.35102 219.428571h635.29796c43.885714 0 79.412245 35.526531 79.412244 79.412245v426.840817c0 43.363265-35.526531 79.412245-79.412244 79.412245z" fill="#DCF3F9"/><path d="M829.64898 218.906122H194.35102c-43.885714 0-79.412245 35.526531-79.412244 79.412245v426.840817c0 43.885714 35.526531 79.412245 79.412244 79.412245h635.29796c43.885714 0 79.412245-35.526531 79.412244-79.412245V298.318367c0-43.363265-35.526531-79.412245-79.412244-79.412245z m0 40.228572c2.089796 0 3.657143 0 5.746938 0.522449l-295.183673 295.183673c-15.673469 15.673469-40.75102 15.673469-55.902041 0L188.604082 259.134694c2.089796-0.522449 3.657143-0.522449 5.746938-0.522449h635.29796z m39.706122 466.02449c0 21.942857-17.763265 39.706122-39.706122 39.706122H194.35102c-21.942857 0-39.706122-17.763265-39.706122-39.706122V298.318367c0-5.22449 1.044898-9.926531 2.612245-14.106122l298.318367 298.318367c15.673469 15.673469 36.04898 22.987755 55.902041 22.987755s40.75102-7.836735 55.902041-22.987755l298.318367-298.318367c1.567347 4.702041 2.612245 9.404082 2.612245 14.106122v426.840817z" fill="#7BD4EF"/></symbol><symbol id="icon--monkey" viewbox="0 0 1024 1024"><path d="M384 234.666667m-42.666667 0a42.666667 42.666667 0 1 0 85.333334 0 42.666667 42.666667 0 1 0-85.333334 0Z" fill="#EFF1F4"/><path d="M640 234.666667m-42.666667 0a42.666667 42.666667 0 1 0 85.333334 0 42.666667 42.666667 0 1 0-85.333334 0Z" fill="#EFF1F4"/><path d="M810.666667 128a85.333333 85.333333 0 1 1 0 170.666667h-42.666667V128zM256 256v42.666667h-42.666667a85.333333 85.333333 0 0 1 0-170.666667h42.666667z" fill="#CDABA5"/><path d="M768 128v128a140.8 140.8 0 0 0-146.346667-149.333333C561.066667 106.666667 512 187.52 512 234.666667c0-47.146667-49.066667-128-109.653333-128A140.8 140.8 0 0 0 256 256V64a42.794667 42.794667 0 0 1 42.666667-42.666667h426.666666a42.794667 42.794667 0 0 1 42.666667 42.666667z" fill="#CDABA5"/><path d="M768 256v149.333333a42.794667 42.794667 0 0 1-42.666667 42.666667H298.666667a42.794667 42.794667 0 0 1-42.666667-42.666667v-149.333333a140.8 140.8 0 0 1 146.346667-149.333333C462.933333 106.666667 512 187.52 512 234.666667c0-47.146667 49.066667-128 109.653333-128A140.8 140.8 0 0 1 768 256z m-85.333333-21.333333a42.666667 42.666667 0 1 0-42.666667 42.666666 42.794667 42.794667 0 0 0 42.666667-42.666666z m-256 0a42.666667 42.666667 0 1 0-42.666667 42.666666 42.794667 42.794667 0 0 0 42.666667-42.666666z" fill="#F6C8A4"/><path d="M1002.666667 618.666667v213.333333c0-50.773333-40.32-94.506667-89.173334-114.986667 2.56-30.506667 3.84-63.36 3.84-98.346666a509.504 509.504 0 0 0-42.666666-192c-21.333333-42.666667 0-64 21.333333-64s42.666667 0 64 42.666666a650.666667 650.666667 0 0 1 42.666667 213.333334z" fill="#CDABA5"/><path d="M341.333333 917.333333v85.333334H21.333333v-42.666667a42.794667 42.794667 0 0 1 42.666667-42.666667h21.333333c0-117.973333 45.44-213.333333 128-213.333333v128a85.333333 85.333333 0 0 0 85.333334 85.333333z" fill="#F6C8A4"/><path d="M913.493333 717.013333C962.346667 737.493333 1002.666667 781.226667 1002.666667 832c0 94.293333-50.133333 170.666667-106.666667 170.666667H576v-42.666667a42.794667 42.794667 0 0 1 42.666667-42.666667H298.666667a85.333333 85.333333 0 0 1-85.333334-85.333333V490.666667a42.794667 42.794667 0 0 1 42.666667-42.666667h490.666667c58.88 0 106.666667 138.026667 106.666666 256a154.282667 154.282667 0 0 1 60.16 13.013333z" fill="#F6C8A4"/><path d="M725.333333 469.333333v-42.666666a21.333333 21.333333 0 0 0 21.333334-21.333334v-106.666666h42.666666v106.666666a64 64 0 0 1-64 64zM789.333333 128h-42.666666V64a21.333333 21.333333 0 0 0-21.333334-21.333333H298.666667a21.333333 21.333333 0 0 0-21.333334 21.333333v64h-42.666666V64a64 64 0 0 1 64-64h426.666666a64 64 0 0 1 64 64zM298.666667 469.333333a64 64 0 0 1-64-64v-106.666666h42.666666v106.666666a21.333333 21.333333 0 0 0 21.333334 21.333334z" fill="#2A3244"/><path d="M810.666667 320h-42.666667a21.333333 21.333333 0 0 1-21.333333-21.333333V128a21.333333 21.333333 0 0 1 21.333333-21.333333h42.666667a106.666667 106.666667 0 1 1 0 213.333333z m-21.333334-42.666667h21.333334a64 64 0 0 0 0-128h-21.333334zM256 320h-42.666667a106.666667 106.666667 0 0 1 0-213.333333h42.666667a21.333333 21.333333 0 0 1 21.333333 21.333333v170.666667a21.333333 21.333333 0 0 1-21.333333 21.333333z m-42.666667-170.666667a64 64 0 1 0 0 128h21.333334V149.333333z" fill="#2A3244"/><path d="M789.333333 256h-42.666666a119.850667 119.850667 0 0 0-125.013334-128C576.981333 128 533.333333 195.498667 533.333333 234.666667a21.333333 21.333333 0 0 1-42.666666 0c0-39.168-43.648-106.666667-88.32-106.666667A119.850667 119.850667 0 0 0 277.333333 256h-42.666666a161.877333 161.877333 0 0 1 167.68-170.666667C448.213333 85.333333 488.533333 121.6 512 163.328 535.466667 121.6 575.786667 85.333333 621.653333 85.333333A161.877333 161.877333 0 0 1 789.333333 256z" fill="#2A3244"/><path d="M640 298.666667a64 64 0 1 1 64-64 64 64 0 0 1-64 64z m0-85.333334a21.333333 21.333333 0 1 0 21.333333 21.333334 21.333333 21.333333 0 0 0-21.333333-21.333334zM384 298.666667a64 64 0 1 1 64-64 64 64 0 0 1-64 64z m0-85.333334a21.333333 21.333333 0 1 0 21.333333 21.333334 21.333333 21.333333 0 0 0-21.333333-21.333334zM490.666667 320h42.666666v128h-42.666666z" fill="#2A3244"/><path d="M469.333333 298.666667h85.333334v42.666666h-85.333334zM426.666667 896h192v42.666667h-192z" fill="#2A3244"/><path d="M896 1024H576a21.333333 21.333333 0 0 1-21.333333-21.333333v-42.666667a64 64 0 0 1 64-64h0.704a263.381333 263.381333 0 0 1 69.696-168.768A140.288 140.288 0 0 1 789.333333 682.666667v42.666666a98.901333 98.901333 0 0 0-70.186666 32A227.584 227.584 0 0 0 661.333333 917.333333a21.333333 21.333333 0 0 1-21.333333 21.333334h-21.333333a21.333333 21.333333 0 0 0-21.333334 21.333333v21.333333h298.666667c40.362667 0 85.333333-61.333333 85.333333-149.333333 0-43.818667-38.208-79.445333-76.074666-95.317333A133.568 133.568 0 0 0 853.333333 725.333333a21.333333 21.333333 0 0 1-21.333333-21.333333c0-118.656-48.853333-234.666667-85.333333-234.666667H256a21.333333 21.333333 0 0 0-21.333333 21.333334v341.333333a64 64 0 0 0 64 64v42.666667a106.794667 106.794667 0 0 1-106.666667-106.666667V490.666667a64 64 0 0 1 64-64h490.666667c77.717333 0 122.666667 145.749333 127.552 257.408a184.661333 184.661333 0 0 1 47.701333 13.333333C983.850667 723.370667 1024 776.234667 1024 832c0 105.877333-57.408 192-128 192z" fill="#2A3244"/><path d="M341.333333 1024H21.333333a21.333333 21.333333 0 0 1-21.333333-21.333333v-42.666667a64 64 0 0 1 64-64h0.469333C70.272 767.509333 128.618667 682.666667 213.333333 682.666667v42.666666c-73.685333 0-106.666667 96.448-106.666666 192a21.333333 21.333333 0 0 1-21.333334 21.333334H64a21.333333 21.333333 0 0 0-21.333333 21.333333v21.333333h277.333333v-64h42.666667v85.333334a21.333333 21.333333 0 0 1-21.333334 21.333333zM554.666667 576h42.666666v320h-42.666666zM682.666667 576h42.666666v170.666667h-42.666666z" fill="#2A3244"/><path d="M426.666667 938.666667h-128a21.333333 21.333333 0 0 1-21.333334-21.333334V576h42.666667v320h85.333333V576h42.666667v341.333333a21.333333 21.333333 0 0 1-21.333333 21.333334zM1024 832h-42.666667V618.666667a629.952 629.952 0 0 0-41.045333-205.184C925.482667 384 915.008 384 896 384a8.405333 8.405333 0 0 0-7.232 3.584c-2.624 4.266667-2.688 14.208 4.992 29.546667A535.829333 535.829333 0 0 1 938.666667 618.666667c0 35.562667-1.322667 69.248-3.925334 100.138666l-0.618666 8.128-42.538667-3.2 0.64-8.533333A1160.533333 1160.533333 0 0 0 896 618.666667a493.333333 493.333333 0 0 0-41.045333-183.850667 69.034667 69.034667 0 0 1-2.496-69.674667A50.666667 50.666667 0 0 1 896 341.333333c29.44 0 57.941333 4.266667 83.2 54.464A673.365333 673.365333 0 0 1 1024 618.666667z" fill="#2A3244"/></symbol><symbol id="icon-GitHub" viewbox="0 0 1024 1024"><path d="M960 512c0 97.76-28.704 185.216-85.664 263.264-56.96 78.016-130.496 131.84-220.64 161.856-10.304 1.824-18.368 0.448-22.848-4.032a22.4 22.4 0 0 1-7.2-17.504v-122.88c0-37.632-10.304-65.44-30.464-82.912a409.856 409.856 0 0 0 59.616-10.368 222.752 222.752 0 0 0 54.72-22.816c18.848-10.784 34.528-23.36 47.104-38.592 12.544-15.232 22.848-35.904 30.912-61.44 8.096-25.568 12.128-54.688 12.128-87.904 0-47.072-15.232-86.976-46.208-120.16 14.368-35.456 13.024-74.912-4.48-118.848-10.752-3.616-26.432-1.344-47.072 6.272s-38.56 16.16-53.824 25.568l-21.984 13.888c-36.32-10.304-73.536-15.232-112.096-15.232s-75.776 4.928-112.096 15.232a444.48 444.48 0 0 0-24.672-15.68c-10.336-6.272-26.464-13.888-48.896-22.432-21.952-8.96-39.008-11.232-50.24-8.064-17.024 43.936-18.368 83.424-4.032 118.848-30.496 33.632-46.176 73.536-46.176 120.608 0 33.216 4.032 62.336 12.128 87.456 8.032 25.12 18.368 45.76 30.496 61.44 12.544 15.68 28.224 28.704 47.072 39.04 18.848 10.304 37.216 17.92 54.72 22.816a409.6 409.6 0 0 0 59.648 10.368c-15.712 13.856-25.12 34.048-28.704 60.064a99.744 99.744 0 0 1-26.464 8.512 178.208 178.208 0 0 1-33.184 2.688c-13.024 0-25.568-4.032-38.144-12.544-12.544-8.512-23.296-20.64-32.256-36.32a97.472 97.472 0 0 0-28.256-30.496c-11.232-8.064-21.088-12.576-28.704-13.92l-11.648-1.792c-8.096 0-13.92 0.928-17.056 2.688-3.136 1.792-4.032 4.032-2.688 6.72s3.136 5.408 5.376 8.096 4.928 4.928 7.616 7.168l4.032 2.688c8.544 4.032 17.056 11.232 25.568 21.984 8.544 10.752 14.368 20.64 18.4 29.6l5.824 13.44c4.928 14.816 13.44 26.912 25.568 35.872 12.096 8.992 25.088 14.816 39.008 17.504 13.888 2.688 27.36 4.032 40.352 4.032s23.776-0.448 32.288-2.24l13.472-2.24c0 14.784 0 32.288 0.416 52.032 0 19.744 0.48 30.496 0.48 31.392a22.624 22.624 0 0 1-7.648 17.472c-4.928 4.48-12.992 5.824-23.296 4.032-90.144-30.048-163.68-83.84-220.64-161.888C92.256 697.216 64 609.312 64 512c0-81.152 20.192-156.064 60.096-224.672s94.176-122.88 163.232-163.232C355.936 84.192 430.816 64 512 64s156.064 20.192 224.672 60.096 122.88 94.176 163.232 163.232C939.808 355.488 960 430.848 960 512" fill="#000000"/></symbol><symbol id="icon-shengxiaoyang" viewbox="0 0 1024 1024"><path d="M765.274975 338.986314a67.296264 67.296264 0 0 1 28.435042 56.125355c0 31.346248-20.310744 72.983273-46.579306 85.305124-4.671471 2.166479-19.566017-5.416198-19.566017 0.744728 0 36.897851-27.080992 67.702479-59.916694 68.108694a54.839008 54.839008 0 0 1-27.961124-6.770248c-6.025521 32.294083-40.215273 57.682512-81.716893 58.630347-36.830149 0.744727-67.702479-18.00886-78.805685-44.683636a57.88562 57.88562 0 0 1-39.199736 17.196429c-28.028826 0.609322-51.589289-20.310744-58.15643-49.219702a56.80238 56.80238 0 0 1-12.254149 1.624859c-33.106512 0.677025-60.052099-28.570446-60.052099-65.603702a71.426116 71.426116 0 0 1 4.536066-25.726942 64.588165 64.588165 0 0 1-44.006611-63.504926 68.379504 68.379504 0 0 1 39.402843-63.572628A69.936661 69.936661 0 0 1 294.675041 264.039669c0-36.965554 27.080992-67.702479 59.916695-68.244099a50.641455 50.641455 0 0 1 12.863471 1.35405c3.520529-33.241917 28.705851-59.578182 59.510479-60.187504a56.26076 56.26076 0 0 1 42.991074 19.227504 71.493818 71.493818 0 0 1 68.718017-54.161984 67.702479 67.702479 0 0 1 69.801256 56.599273 57.61481 57.61481 0 0 1 40.012165-18.008859c33.106512-0.677025 60.052099 28.638149 60.0521 65.603702a72.306248 72.306248 0 0 1-3.249719 21.529388 54.161983 54.161983 0 0 1 19.836826-4.332958c33.106512-0.744727 60.052099 28.638149 60.119802 65.603702a71.087603 71.087603 0 0 1-20.310744 50.099835z m0 0" fill="#FF8A15"/><path d="M555.803504 607.83286c-33.85124 0-64.45276-15.774678-79.008793-40.621488a63.031008 63.031008 0 0 1-36.762447 12.931173 66.280727 66.280727 0 0 1-63.36952-48.204165 50.370645 50.370645 0 0 1-6.770248 0.609322A63.098711 63.098711 0 0 1 324.328727 514.538843a76.436099 76.436099 0 0 1-22.071008-54.161983 78.331769 78.331769 0 0 1 2.843504-21.393984 73.050975 73.050975 0 0 1-42.246347-67.702479A76.774612 76.774612 0 0 1 298.872595 304.661157a77.993256 77.993256 0 0 1-11.374016-40.621488c0-40.621488 29.924496-74.472727 66.822347-75.217454h7.176462c6.770248-33.85124 33.85124-58.494942 65.197488-59.104265a61.947769 61.947769 0 0 1 39.741355 13.540496A79.482711 79.482711 0 0 1 538.403967 94.783471a75.35286 75.35286 0 0 1 74.472727 50.641455 61.880066 61.880066 0 0 1 80.836761 6.093223 76.706909 76.706909 0 0 1 22.13871 54.161983 80.362843 80.362843 0 0 1-0.812429 11.374017 63.843438 63.843438 0 0 1 10.223074-1.08324 62.421686 62.421686 0 0 1 45.157554 18.211967 76.232992 76.232992 0 0 1 22.13871 54.161984 79.211901 79.211901 0 0 1-16.790214 49.152 74.472727 74.472727 0 0 1 24.711404 57.479404c0 32.158678-20.784661 77.722446-50.709157 91.669157a21.935603 21.935603 0 0 1-13.540495 0h-1.760265c-2.369587 38.387306-31.346248 69.395041-66.686942 70.139769a59.104264 59.104264 0 0 1-23.425058-4.197554c-10.629289 31.820165-45.292959 54.703603-86.252959 55.651438zM479.096595 549.067107h1.421752a6.770248 6.770248 0 0 1 5.077686 4.265257c10.087669 24.779107 38.455008 40.621488 72.170843 40.215272 37.304066-0.81243 69.530446-23.49276 74.946645-52.875636a6.770248 6.770248 0 0 1 3.994446-5.077686 7.311868 7.311868 0 0 1 6.770248 0 45.292959 45.292959 0 0 0 24.30519 6.228628c29.315174-0.609322 53.078744-28.096529 53.078744-60.932231A9.00443 9.00443 0 0 1 723.976463 473.917355a17.805752 17.805752 0 0 1 15.30076-1.015537 26.607074 26.607074 0 0 0 5.687008 0.880132c23.628165-11.035504 41.840132-50.709157 41.77243-78.602578a60.119802 60.119802 0 0 0-25.320727-50.23524 7.311868 7.311868 0 0 1-3.114314-5.213091 6.770248 6.770248 0 0 1 2.031074-5.619305 64.858975 64.858975 0 0 0 17.941157-45.225257 62.150876 62.150876 0 0 0-17.873454-44.345124A47.865653 47.865653 0 0 0 725.330512 230.18843a46.308496 46.308496 0 0 0-17.264132 3.723636 7.176463 7.176463 0 0 1-7.447273-1.286347 7.244165 7.244165 0 0 1-1.692562-7.311868 68.853421 68.853421 0 0 0 2.911207-19.566016 62.015471 62.015471 0 0 0-17.873454-44.277422 47.391736 47.391736 0 0 0-35.069885-14.285223 51.724694 51.724694 0 0 0-35.137587 15.910083 6.770248 6.770248 0 0 1-12.051041-3.926744 60.932231 60.932231 0 0 0-62.624793-50.438347 64.588165 64.588165 0 0 0-62.015471 48.88119 6.770248 6.770248 0 0 1-12.118744 3.114314 47.391736 47.391736 0 0 0-37.574876-16.857917c-27.080992 0.54162-49.490512 23.695868-52.672529 54.161983a7.176463 7.176463 0 0 1-2.843504 5.009984 6.770248 6.770248 0 0 1-5.619306 1.150942 45.225256 45.225256 0 0 0-11.509422-1.08324c-29.247471 0.609322-53.078744 28.028826-53.011041 60.932231a62.624793 62.624793 0 0 0 13.540496 38.928926 6.770248 6.770248 0 0 1 1.286347 6.160926 7.176463 7.176463 0 0 1-3.994446 4.739173 61.676959 61.676959 0 0 0-35.137587 57.07319c0 26.742479 16.045488 50.099835 38.861223 56.666976a6.770248 6.770248 0 0 1 4.332959 3.588231 6.770248 6.770248 0 0 1 0 5.619306 68.040992 68.040992 0 0 0-4.129851 23.289653 61.609256 61.609256 0 0 0 17.873454 44.277421 46.782413 46.782413 0 0 0 35.002182 14.217521 48.948893 48.948893 0 0 0 10.764694-1.421752 7.311868 7.311868 0 0 1 5.348496 0.812429 6.770248 6.770248 0 0 1 3.182017 4.468364c5.957818 26.268562 26.471669 43.871207 51.115372 43.803504a50.77686 50.77686 0 0 0 34.392859-15.097653 7.10876 7.10876 0 0 1 4.942281-1.963372z m0 0" fill="#7F0518"/><path d="M353.169983 363.494612c0 54.161983 34.663669 103.720198 90.992133 130.665785a214.819967 214.819967 0 0 0 181.916562 0c56.328463-27.080992 90.992132-76.774612 90.992132-130.665785 0-83.341752-81.242975-150.908826-181.984265-150.908827s-181.916562 67.702479-181.916562 150.908827z m0 0" fill="#FFFFFF"/><path d="M535.086545 521.309091c-104.194116 0-189.025322-70.816793-189.025322-157.814479S430.89243 205.544727 535.086545 205.544727s189.025322 70.816793 189.025323 157.882182S639.348364 521.309091 535.086545 521.309091z m0-301.749951C438.678215 219.626843 360.414149 284.350413 360.414149 363.426909s78.264066 143.867769 174.672396 143.867769 174.875504-64.520463 174.875505-143.800066S631.562579 219.626843 535.086545 219.626843z m0 0" fill="#7F0518"/><path d="M701.837752 293.151736a109.068694 109.068694 0 0 0 21.529388 37.710281 67.16086 67.16086 0 0 0 16.587108 14.420628 59.375074 59.375074 0 0 0 18.144264 6.770248 70.342876 70.342876 0 0 0 40.621488-3.182017A59.510479 59.510479 0 0 0 827.561256 264.039669c-9.749157-17.264132-34.934479-22.003306-54.161983-16.451702s-34.460562 25.253025-31.210843 44.751339c6.770248 38.928926 54.161983 46.443901 61.880066 6.770248a25.185322 25.185322 0 0 0-20.920066-30.195306 15.774678 15.774678 0 0 0-15.706975 6.770248 14.691438 14.691438 0 0 0 1.489454 16.92562 13.540496 13.540496 0 0 0 16.587108 2.234182" fill="#FFFFFF"/><path d="M773.399273 360.109488a82.935537 82.935537 0 0 1-16.722513-1.692562 70.139769 70.139769 0 0 1-20.310743-7.379571 75.014347 75.014347 0 0 1-18.347372-15.503867 118.208529 118.208529 0 0 1-23.018843-40.147571 6.770248 6.770248 0 1 1 13.540496-4.468363 101.553719 101.553719 0 0 0 20.310743 35.137586 56.937785 56.937785 0 0 0 14.623736 12.457257 55.786843 55.786843 0 0 0 16.045487 5.822413 64.45276 64.45276 0 0 0 36.356232-2.843504 52.604826 52.604826 0 0 0 25.523835-74.472727c-7.92119-14.082116-29.924496-17.73805-45.766876-13.134281s-28.976661 20.310744-26.268562 36.897851a29.992198 29.992198 0 0 0 27.080991 27.080991 22.748033 22.748033 0 0 0 21.055471-20.310743 17.941157 17.941157 0 0 0-2.708099-14.217521 19.092099 19.092099 0 0 0-12.389554-7.785785 8.936727 8.936727 0 0 0-8.598214 3.791339 7.311868 7.311868 0 0 0 0.609322 8.46281 6.770248 6.770248 0 0 0 7.514975 1.083239 6.770248 6.770248 0 1 1 7.785785 11.712529 20.310744 20.310744 0 0 1-25.659239-3.249719 21.393983 21.393983 0 0 1-2.369587-25.388429 22.815736 22.815736 0 0 1 22.748033-10.290777 33.85124 33.85124 0 0 1 21.800198 13.540496 32.023273 32.023273 0 0 1 4.942281 24.982214c-3.723636 19.498314-17.331835 32.023273-34.595967 32.023273h-0.473917a43.938909 43.938909 0 0 1-40.621488-39.06433c-3.655934-22.138711 12.592661-45.766876 36.220827-52.740232 21.190876-6.160926 50.099835-1.35405 62.015471 19.769124a66.61924 66.61924 0 0 1-32.564893 94.174149 69.259636 69.259636 0 0 1-27.554909 5.416198z m0 0" fill="#7F0518"/><path d="M367.861421 291.120661a108.323967 108.323967 0 0 1-21.59709 37.642579 64.791273 64.791273 0 0 1-16.587108 14.082115 58.901157 58.901157 0 0 1-18.144264 6.770248 71.561521 71.561521 0 0 1-40.621488-3.182016 59.645884 59.645884 0 0 1-29.044364-84.221885c9.749157-17.264132 34.934479-22.003306 54.161984-16.451702s34.460562 25.253025 31.210843 44.751339c-6.770248 38.928926-54.161983 46.511603-61.880066 6.770248A25.185322 25.185322 0 0 1 285.941421 266.747769a15.774678 15.774678 0 0 1 15.639273 7.10876 14.556033 14.556033 0 0 1-1.421752 16.92562 13.540496 13.540496 0 0 1-16.65481 2.166479" fill="#FFFFFF"/><path d="M296.299901 357.943008a74.946645 74.946645 0 0 1-27.758017-5.280793 66.416132 66.416132 0 0 1-32.564892-94.174149c11.915636-21.055471 40.621488-25.862347 61.947768-19.701421 23.695868 6.770248 39.87676 30.601521 36.220827 52.740231a44.006612 44.006612 0 0 1-40.621488 38.996628H292.711669c-17.264132 0-30.804628-12.457256-34.595967-32.023273a31.752463 31.752463 0 0 1 5.009984-24.914512 33.85124 33.85124 0 0 1 21.732496-13.540496 22.748033 22.748033 0 0 1 22.883438 10.290777 21.529388 21.529388 0 0 1-2.369587 25.38843 20.310744 20.310744 0 0 1-25.726942 3.182016 6.770248 6.770248 0 0 1 7.853488-11.644826 6.296331 6.296331 0 0 0 7.514975-1.150942 7.447273 7.447273 0 0 0 0.812429-8.530513 8.73362 8.73362 0 0 0-8.598214-3.791339 19.498314 19.498314 0 0 0-12.457257 7.718083A17.73805 17.73805 0 0 0 272.400926 295.859835c2.437289 13.066579 10.290777 20.310744 20.987768 20.310744a29.924496 29.924496 0 0 0 27.080992-27.080992c2.775802-16.65481-11.306314-32.49719-26.268562-36.830149s-37.777983-0.880132-45.766876 13.134281a49.96443 49.96443 0 0 0-0.473917 50.573752 49.152 49.152 0 0 0 26.065454 23.628165 64.588165 64.588165 0 0 0 36.423934 2.775802 52.672529 52.672529 0 0 0 16.11319-5.619306 60.932231 60.932231 0 0 0 14.759141-12.660363 101.553719 101.553719 0 0 0 20.310743-35.20529 7.10876 7.10876 0 0 1 8.530513-4.536066 6.770248 6.770248 0 0 1 4.400661 8.936727 116.651372 116.651372 0 0 1-23.018843 40.147571A71.629223 71.629223 0 0 1 333.333157 349.073983a69.665851 69.665851 0 0 1-20.310744 7.311868 101.553719 101.553719 0 0 1-16.722512 1.557157z m0 0" fill="#7F0518"/><path d="M586.472727 360.854215A37.845686 37.845686 0 1 0 624.453818 323.076231a37.777983 37.777983 0 0 0-37.777983 37.777984z m0 0" fill="#7F0518"/><path d="M597.372826 353.271537a17.46724 17.46724 0 1 0 8.73362-15.165355A17.399537 17.399537 0 0 0 597.372826 353.271537z m0 0M629.057587 378.592264a7.988893 7.988893 0 1 0 7.988892-7.988892 7.988893 7.988893 0 0 0-7.988892 7.988892z m0 0" fill="#FFFFFF"/><path d="M409.159934 362.07286a37.845686 37.845686 0 1 0 37.845686-37.777984 37.845686 37.845686 0 0 0-37.845686 37.777984z m0 0" fill="#7F0518"/><path d="M419.992331 354.490182a17.46724 17.46724 0 1 0 17.467239-17.46724 17.46724 17.46724 0 0 0-17.467239 17.46724z m0 0M451.812496 379.810909a7.853488 7.853488 0 0 0 3.994446 6.770248 7.582678 7.582678 0 0 0 7.92119 0 7.853488 7.853488 0 0 0 3.994447-6.770248 7.988893 7.988893 0 1 0-15.910083 0z m0 0" fill="#FFFFFF"/><path d="M648.149686 305.067372a6.770248 6.770248 0 0 1-4.739174-1.89567 29.112066 29.112066 0 0 0-21.055471-9.275239 26.336264 26.336264 0 0 0-16.519405 8.530512 6.770248 6.770248 0 0 1-10.900099-8.936727 40.621488 40.621488 0 0 1 26.268562-13.540496 42.178645 42.178645 0 0 1 31.684761 12.931174 7.10876 7.10876 0 0 1 0.406214 9.952264 6.770248 6.770248 0 0 1-5.145388 2.369587z m0 0M425.205421 306.286017a6.770248 6.770248 0 0 1-4.468363-1.557157 6.770248 6.770248 0 0 1-1.015537-9.952265 40.621488 40.621488 0 0 1 26.200859-13.540496 42.110942 42.110942 0 0 1 31.752463 12.931174A6.770248 6.770248 0 0 1 468.061091 304.661157a28.570446 28.570446 0 0 0-21.123174-9.27524 25.726942 25.726942 0 0 0-16.316297 8.46281 6.770248 6.770248 0 0 1-5.416199 2.640397z m0 0" fill="#7F0518"/><path d="M624.453818 432.009521c0 10.832397 13.540496 19.633719 30.127603 19.633719s30.127603-8.801322 30.127604-19.633719-13.540496-19.633719-30.127604-19.633719-30.127603 8.801322-30.127603 19.633719z m0 0M387.49514 432.009521c0 10.832397 13.540496 19.633719 30.127604 19.633719s30.127603-8.801322 30.127603-19.633719-13.540496-19.633719-30.127603-19.633719-30.127603 8.801322-30.127604 19.633719z m0 0" fill="#DB1616"/><path d="M511.052165 432.889653c0 10.696992 12.321851 19.362909 27.554909 19.362909s27.554909-8.665917 27.554909-19.362909a19.295207 19.295207 0 0 0-13.540495-16.722513 37.913388 37.913388 0 0 0-27.554909 0 19.362909 19.362909 0 0 0-13.540496 16.722513z m0 0" fill="#7F0518"/><path d="M518.093223 483.59881a23.357355 23.357355 0 0 1-4.874578-0.473917 33.85124 33.85124 0 0 1-21.867901-17.534943 7.176463 7.176463 0 0 1 3.114314-9.546049 6.770248 6.770248 0 0 1 9.410644 3.182016A20.310744 20.310744 0 0 0 516.129851 469.178182a20.310744 20.310744 0 0 0 15.706975-5.822413v-14.894546a6.770248 6.770248 0 1 1 14.149819 0v18.144265a6.770248 6.770248 0 0 1-2.369587 5.213091 38.387306 38.387306 0 0 1-25.320727 11.780231z m0 0" fill="#7F0518"/><path d="M559.256331 483.59881a38.319603 38.319603 0 0 1-25.320728-11.712529A6.770248 6.770248 0 0 1 543.210843 461.460099a22.274116 22.274116 0 0 0 18.076562 7.785785 20.310744 20.310744 0 0 0 11.915636-9.884562 6.770248 6.770248 0 0 1 12.660364 6.364033 34.39286 34.39286 0 0 1-21.935603 17.534943 41.23081 41.23081 0 0 1-4.874579 0.338512z m0 0" fill="#7F0518"/></symbol><symbol id="icon-bilibili" viewbox="0 0 1129 1024"><path d="M234.909 9.656a80.468 80.468 0 0 1 68.398 0 167.374 167.374 0 0 1 41.843 30.578l160.937 140.82h115.07l160.936-140.82a168.983 168.983 0 0 1 41.843-30.578A80.468 80.468 0 0 1 930.96 76.445a80.468 80.468 0 0 1-17.703 53.914 449.818 449.818 0 0 1-35.406 32.187 232.553 232.553 0 0 1-22.531 18.508h100.585a170.593 170.593 0 0 1 118.289 53.109 171.397 171.397 0 0 1 53.914 118.288v462.693a325.897 325.897 0 0 1-4.024 70.007 178.64 178.64 0 0 1-80.468 112.656 173.007 173.007 0 0 1-92.539 25.75h-738.7a341.186 341.186 0 0 1-72.421-4.024A177.835 177.835 0 0 1 28.91 939.065a172.202 172.202 0 0 1-27.36-92.539V388.662a360.498 360.498 0 0 1 0-66.789A177.03 177.03 0 0 1 162.487 178.64h105.414c-16.899-12.07-31.383-26.555-46.672-39.43a80.468 80.468 0 0 1-25.75-65.984 80.468 80.468 0 0 1 39.43-63.57M216.4 321.873a80.468 80.468 0 0 0-63.57 57.937 108.632 108.632 0 0 0 0 30.578v380.615a80.468 80.468 0 0 0 55.523 80.469 106.218 106.218 0 0 0 34.601 5.632h654.208a80.468 80.468 0 0 0 76.444-47.476 112.656 112.656 0 0 0 8.047-53.109v-354.06a135.187 135.187 0 0 0 0-38.625 80.468 80.468 0 0 0-52.304-54.719 129.554 129.554 0 0 0-49.89-7.242H254.22a268.764 268.764 0 0 0-37.82 0z m0 0" fill="#20B0E3"/><path d="M348.369 447.404a80.468 80.468 0 0 1 55.523 18.507 80.468 80.468 0 0 1 28.164 59.547v80.468a80.468 80.468 0 0 1-16.094 51.5 80.468 80.468 0 0 1-131.968-9.656 104.609 104.609 0 0 1-10.46-54.719v-80.468a80.468 80.468 0 0 1 70.007-67.593z m416.02 0a80.468 80.468 0 0 1 86.102 75.64v80.468a94.148 94.148 0 0 1-12.07 53.11 80.468 80.468 0 0 1-132.773 0 95.757 95.757 0 0 1-12.875-57.133V519.02a80.468 80.468 0 0 1 70.007-70.812z m0 0" fill="#20B0E3"/></symbol><symbol id="icon-bilibili1" viewbox="0 0 1024 1024"><path d="M0 0m184.32 0l655.36 0q184.32 0 184.32 184.32l0 655.36q0 184.32-184.32 184.32l-655.36 0q-184.32 0-184.32-184.32l0-655.36q0-184.32 184.32-184.32Z" fill="#EC5D85"/><path d="M512 241.96096h52.224l65.06496-96.31744c49.63328-50.31936 89.64096 0.43008 63.85664 45.71136l-34.31424 51.5072c257.64864 5.02784 257.64864 43.008 257.64864 325.03808 0 325.94944 0 336.46592-404.48 336.46592S107.52 893.8496 107.52 567.90016c0-277.69856 0-318.80192 253.14304-324.95616l-39.43424-58.368c-31.26272-54.90688 37.33504-90.40896 64.68608-42.37312l60.416 99.80928c18.18624-0.0512 41.18528-0.0512 65.66912-0.0512z" fill="#EF85A7"/><path d="M512 338.5856c332.8 0 332.8 0 332.8 240.64s0 248.39168-332.8 248.39168-332.8-7.75168-332.8-248.39168 0-240.64 332.8-240.64z" fill="#EC5D85"/><path d="M281.6 558.08a30.72 30.72 0 0 1-27.47392-16.97792 30.72 30.72 0 0 1 13.73184-41.216l122.88-61.44a30.72 30.72 0 0 1 41.216 13.74208 30.72 30.72 0 0 1-13.74208 41.216l-122.88 61.44a30.59712 30.59712 0 0 1-13.73184 3.23584zM752.64 558.08a30.60736 30.60736 0 0 1-12.8512-2.83648l-133.12-61.44a30.72 30.72 0 0 1-15.04256-40.7552 30.72 30.72 0 0 1 40.76544-15.02208l133.12 61.44A30.72 30.72 0 0 1 752.64 558.08zM454.656 666.88a15.36 15.36 0 0 1-12.288-6.1952 15.36 15.36 0 0 1 3.072-21.49376l68.5056-50.91328 50.35008 52.62336a15.36 15.36 0 0 1-22.20032 21.23776l-31.5904-33.024-46.71488 34.72384a15.28832 15.28832 0 0 1-9.13408 3.04128z" fill="#EF85A7"/><path d="M65.536 369.31584c15.03232 101.90848 32.84992 147.17952 44.544 355.328 14.63296 2.18112 177.70496 10.04544 204.05248-74.62912a16.14848 16.14848 0 0 0 1.64864-10.87488c-30.60736-80.3328-169.216-60.416-169.216-60.416s-10.36288-146.50368-11.49952-238.83776zM362.25024 383.03744l34.816 303.17568h34.64192L405.23776 381.1328zM309.52448 536.28928h45.48608l16.09728 158.6176-31.82592 1.85344zM446.86336 542.98624h45.80352V705.3312h-33.87392zM296.6016 457.97376h21.39136l5.2736 58.99264-18.91328 2.26304zM326.99392 457.97376h21.39136l2.53952 55.808-17.408 1.61792zM470.62016 459.88864h19.456v62.27968h-19.456zM440.23808 459.88864h22.20032v62.27968h-16.62976z" fill="#FFFFFF"/><path d="M243.56864 645.51936a275.456 275.456 0 0 1-28.4672 23.74656 242.688 242.688 0 0 1-29.53216 17.52064 2.70336 2.70336 0 0 1-4.4032-1.95584 258.60096 258.60096 0 0 1-5.12-29.57312c-1.41312-12.1856-1.95584-25.68192-2.16064-36.36224 0-0.3072 0-2.5088 3.01056-1.90464a245.92384 245.92384 0 0 1 34.22208 9.5744 257.024 257.024 0 0 1 32.3584 15.17568c0.52224 0.256 2.51904 1.4848 0.09216 3.77856z" fill="#EB5480"/><path d="M513.29024 369.31584c15.03232 101.90848 32.84992 147.17952 44.544 355.328 14.63296 2.18112 177.70496 10.04544 204.05248-74.62912a16.14848 16.14848 0 0 0 1.64864-10.87488c-30.60736-80.3328-169.216-60.416-169.216-60.416s-10.36288-146.50368-11.49952-238.83776zM810.00448 383.03744l34.816 303.17568h34.64192L852.992 381.1328zM757.27872 536.28928h45.48608l16.09728 158.6176-31.82592 1.85344zM894.6176 542.98624h45.80352V705.3312H906.5472zM744.35584 457.97376h21.39136l5.2736 58.99264-18.91328 2.26304zM774.74816 457.97376h21.39136l2.53952 55.808-17.408 1.61792zM918.3744 459.88864h19.456v62.27968h-19.456zM887.99232 459.88864h22.20032v62.27968h-16.62976z" fill="#FFFFFF"/><path d="M691.32288 645.51936a275.456 275.456 0 0 1-28.4672 23.74656 242.688 242.688 0 0 1-29.53216 17.52064 2.70336 2.70336 0 0 1-4.4032-1.95584 258.60096 258.60096 0 0 1-5.12-29.57312c-1.41312-12.1856-1.95584-25.68192-2.16064-36.36224 0-0.3072 0-2.5088 3.01056-1.90464a245.92384 245.92384 0 0 1 34.22208 9.5744 257.024 257.024 0 0 1 32.3584 15.17568c0.52224 0.256 2.51904 1.4848 0.09216 3.77856z" fill="#EB5480"/></symbol><symbol id="icon-duihuakuang" viewbox="0 0 1024 1024"><path d="M715.67 383.49H308.83c-2.49 0-4.5-2.01-4.5-4.5v-37.2c0-2.49 2.01-4.5 4.5-4.5h406.84c2.49 0 4.5 2.01 4.5 4.5v37.2c0 2.48-2.02 4.5-4.5 4.5z"/><path d="M715.67 388.16H308.83c-19.02 0-34.5-11.66-34.5-25.99v-28.02c0-14.33 15.48-25.99 34.5-25.99h406.84c19.02 0 34.5 11.66 34.5 25.99v28.02c0 14.33-15.48 25.99-34.5 25.99zM715.67 562.6H308.83c-2.49 0-4.5-2.01-4.5-4.5v-25.8c0-2.49 2.01-4.5 4.5-4.5h406.84c2.49 0 4.5 2.01 4.5 4.5v25.8a4.5 4.5 0 0 1-4.5 4.5z"/><path d="M715.67 585.2H308.83c-19.02 0-34.5-11.66-34.5-25.99v-28.03c0-14.33 15.48-25.99 34.5-25.99h406.84c19.02 0 34.5 11.66 34.5 25.99v28.03c0 14.33-15.48 25.99-34.5 25.99z"/><path d="M518.29 905.61c-36.6 0-73.21-13.93-101.08-41.8l-70.68-70.68c-1.26-1.26-2.51-2.56-3.74-3.91H242.72c-78.82 0-142.94-64.13-142.94-142.95V262.13c0-78.82 64.13-142.94 142.94-142.94h539.05c78.82 0 142.94 64.12 142.94 142.94v384.14c0 78.82-64.13 142.95-142.94 142.95h-90.08c-4.2 5.7-8.79 11.05-13.72 15.98l-58.61 58.61c-27.86 27.87-64.47 41.8-101.07 41.8zM242.72 179.19c-45.74 0-82.94 37.21-82.94 82.94v384.14c0 45.74 37.21 82.95 82.94 82.95h114.24c9.49 0 18.43 4.49 24.09 12.11 2.87 3.87 5.38 6.84 7.91 9.36l70.68 70.68c32.34 32.34 84.96 32.34 117.3 0l58.61-58.61c5.25-5.25 9.85-11.37 13.68-18.21a30.014 30.014 0 0 1 26.17-15.34h106.38c45.74 0 82.94-37.21 82.94-82.95V262.13c0-45.74-37.21-82.94-82.94-82.94H242.72z"/></symbol></svg>',function(l){var c=(c=document.getElementsByTagName("script"))[c.length-1],a=c.getAttribute("data-injectcss"),c=c.getAttribute("data-disable-injectsvg");if(!c){var h,t,i,p,v,z=function(c,a){a.parentNode.insertBefore(c,a)};if(a&&!l.__iconfont__svg__cssinject__){l.__iconfont__svg__cssinject__=!0;try{document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>")}catch(c){console&&console.log(c)}}h=function(){var c,a=document.createElement("div");a.innerHTML=l._iconfont_svg_string_4181523,(a=a.getElementsByTagName("svg")[0])&&(a.setAttribute("aria-hidden","true"),a.style.position="absolute",a.style.width=0,a.style.height=0,a.style.overflow="hidden",a=a,(c=document.body).firstChild?z(a,c.firstChild):c.appendChild(a))},document.addEventListener?~["complete","loaded","interactive"].indexOf(document.readyState)?setTimeout(h,0):(t=function(){document.removeEventListener("DOMContentLoaded",t,!1),h()},document.addEventListener("DOMContentLoaded",t,!1)):document.attachEvent&&(i=h,p=l.document,v=!1,d(),p.onreadystatechange=function(){"complete"==p.readyState&&(p.onreadystatechange=null,o())})}function o(){v||(v=!0,i())}function d(){try{p.documentElement.doScroll("left")}catch(c){return void setTimeout(d,50)}o()}}(window);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/musics/index.html"/>
      <url>/musics/index.html</url>
      
        <content type="html"><![CDATA[<p><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.css"> </p><p><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.js"></script> </p><p><script src="https://cdn.jsdelivr.net/npm/meting@1.2/dist/Meting.min.js"></script><br>    <div id="aplayer-OlIOTMVf" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="7868005687" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="1000px" data-preload="auto" data-theme="#555"></div></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>works</title>
      <link href="/works/index.html"/>
      <url>/works/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tattoos</title>
      <link href="/tattoos/index.html"/>
      <url>/tattoos/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/coin/coin.css"/>
      <url>/css/coin/coin.css</url>
      
        <content type="html"><![CDATA[.tip-button {  border: 0;  border-radius: 0.25rem;  cursor: pointer;  font-size: 20px;  font-weight: 600;  height: 2.6rem;  margin-bottom: -4rem;  outline: 0;  position: relative;  top: 0;  transform-origin: 0% 100%;  transition: transform 50ms ease-in-out;  width: auto;  -webkit-tap-highlight-color: transparent;}.tip-button:active {  transform: rotate(4deg);}.tip-button.clicked {  animation: 150ms ease-in-out 1 shake;  pointer-events: none;}.tip-button.clicked .tip-button__text {  opacity: 0;  transition: opacity 100ms linear 200ms;}.tip-button.clicked::before {  height: 0.5rem;  width: 60%;  background: $button-hover-color;}.tip-button.clicked .coin {  transition: margin-bottom 1s linear 200ms;  margin-bottom: 0;}.tip-button.shrink-landing::before {  transition: width 200ms ease-in;  width: 0;}.tip-button.coin-landed::after {  opacity: 1;  transform: scale(1);  transform-origin: 50% 100%;}.tip-button.coin-landed .coin-wrapper {  background: radial-gradient(circle at 35% 97%, rgba(3, 16, 50, 0.4) 0.04rem, transparent 0.04rem), radial-gradient(      circle at 45% 92%,      rgba(3, 16, 50, 0.4) 0.04rem,      transparent 0.02rem    ), radial-gradient(circle at 55% 98%, rgba(3, 16, 50, 0.4) 0.04rem, transparent 0.04rem), radial-gradient(circle at        65% 96%, rgba(3, 16, 50, 0.4) 0.06rem, transparent 0.06rem);  background-position: center bottom;  background-size: 100%;  bottom: -1rem;  opacity: 0;  transform: scale(2) translateY(-10px);}.tip-button__text {  color: #fff;  margin-right: 1.8rem;  opacity: 1;  position: relative;  transition: opacity 100ms linear 500ms;  z-index: 3;}.tip-button::before {  border-radius: 0.25rem;  bottom: 0;  content: "";  display: block;  height: 100%;  left: 50%;  position: absolute;  transform: translateX(-50%);  transition: height 250ms ease-in-out 400ms, width 250ms ease-in-out 300ms;  width: 100%;  z-index: 2;}.tip-button::after {  bottom: -1rem;  color: white;  content: "ヾ(≧O≦)〃嗷~"; /*点击后显示的内容*/  height: 110%;  left: 0;  opacity: 0;  position: absolute;  pointer-events: none;  text-align: center;  transform: scale(0);  transform-origin: 50% 20%;  transition: transform 200ms cubic-bezier(0, 0, 0.35, 1.43);  width: 100%;  z-index: 1;}.coin-wrapper {  background: none;  bottom: 0;  height: 18rem;  left: 0;  opacity: 1;  overflow: hidden;  pointer-events: none;  position: absolute;  transform: none;  transform-origin: 50% 100%;  transition: opacity 200ms linear 100ms, transform 300ms ease-out;  width: 100%;}.coin {  --front-y-multiplier: 0;  --back-y-multiplier: 0;  --coin-y-multiplier: 0;  --coin-x-multiplier: 0;  --coin-scale-multiplier: 0;  --coin-rotation-multiplier: 0;  --shine-opacity-multiplier: 0.4;  --shine-bg-multiplier: 50%;  bottom: calc(var(--coin-y-multiplier) * 1rem - 3.5rem);  height: 3.5rem;  margin-bottom: 3.05rem;  position: absolute;  right: calc(var(--coin-x-multiplier) * 34% + 16%);  transform: translateX(50%) scale(calc(0.4 + var(--coin-scale-multiplier))) rotate(calc(var(            --coin-rotation-multiplier          ) * -1deg));  transition: opacity 100ms linear 200ms;  width: 3.5rem;  z-index: 3;}.coin__front,.coin__middle,.coin__back,.coin::before,.coin__front::after,.coin__back::after {  border-radius: 50%;  box-sizing: border-box;  height: 100%;  left: 0;  position: absolute;  width: 100%;  z-index: 3;}.coin__front {  background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(115, 124, 153, 0.4) 54%, #c2cadf 54%),    linear-gradient(210deg, #8590b3 32%, transparent 32%), linear-gradient(150deg, #8590b3 32%, transparent 32%),    linear-gradient(to right, #8590b3 22%, transparent 22%, transparent 78%, #8590b3 78%), linear-gradient(      to bottom,      #fcfaf9 44%,      transparent 44%,      transparent 65%,      #fcfaf9 65%,      #fcfaf9 71%,      #8590b3 71%    ), linear-gradient(to right, transparent 28%, #fcfaf9 28%, #fcfaf9 34%, #8590b3 34%, #8590b3 40%, #fcfaf9 40%, #fcfaf9        47%, #8590b3 47%, #8590b3 53%, #fcfaf9 53%, #fcfaf9 60%, #8590b3 60%, #8590b3 66%, #fcfaf9 66%, #fcfaf9 72%, transparent        72%);  background-color: #8590b3;  background-size: 100% 100%;  transform: translateY(calc(var(--front-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--front-scale-multiplier));}.coin__front::after {  background: rgba(0, 0, 0, 0.2);  content: "";  opacity: var(--front-y-multiplier);}.coin__middle {  background: #737c99;  transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--middle-scale-multiplier));}.coin__back {  background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(115, 124, 153, 0.4) 54%, #c2cadf 54%),    radial-gradient(circle at 50% 40%, #fcfaf9 23%, transparent 23%), radial-gradient(circle at 50% 100%, #fcfaf9 35%, transparent        35%);  background-color: #8590b3;  background-size: 100% 100%;  transform: translateY(calc(var(--back-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--back-scale-multiplier));}.coin__back::after {  background: rgba(0, 0, 0, 0.2);  content: "";  opacity: var(--back-y-multiplier);}.coin::before {  background: radial-gradient(circle at 25% 65%, transparent 50%, rgba(255, 255, 255, 0.9) 90%), linear-gradient(55deg, transparent        calc(var(--shine-bg-multiplier) + 0%), #e9f4ff calc(var(--shine-bg-multiplier) + 0%), transparent calc(var(              --shine-bg-multiplier            ) + 50%));  content: "";  opacity: var(--shine-opacity-multiplier);  transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / -2)) scaleY(var(--middle-scale-multiplier))    rotate(calc(var(--coin-rotation-multiplier) * 1deg));  z-index: 10;}.coin::after {  background: #737c99;  content: "";  height: 0.3181818182rem;  left: 0;  position: absolute;  top: 50%;  transform: translateY(-50%);  width: 100%;  z-index: 2;}@keyframes shake {  0% {    transform: rotate(4deg);  }  66% {    transform: rotate(-4deg);  }  100% {    transform: rotate();  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/coin/coin.js"/>
      <url>/js/coin/coin.js</url>
      
        <content type="html"><![CDATA[var tipButtons = document.querySelectorAll(".tip-button");function coinAudio() {  var coinAudio = document.getElementById("coinAudio");  if (coinAudio) {    coinAudio.play(); //有音频时播放  }}// Loop through all buttons (allows for multiple buttons on page)tipButtons.forEach(button => {  var coin = button.querySelector(".coin");  // The larger the number, the slower the animation  coin.maxMoveLoopCount = 90;  button.addEventListener("click", () => {    if (/Android|webOS|BlackBerry/i.test(navigator.userAgent)) return true; //媒体选择    if (button.clicked) return;    button.classList.add("clicked");    // Wait to start flipping th coin because of the button tilt animation    setTimeout(() => {      // Randomize the flipping speeds just for fun      coin.sideRotationCount = Math.floor(Math.random() * 5) * 90;      coin.maxFlipAngle = (Math.floor(Math.random() * 4) + 3) * Math.PI;      button.clicked = true;      flipCoin();      coinAudio();    }, 50);  });  var flipCoin = () => {    coin.moveLoopCount = 0;    flipCoinLoop();  };  var resetCoin = () => {    coin.style.setProperty("--coin-x-multiplier", 0);    coin.style.setProperty("--coin-scale-multiplier", 0);    coin.style.setProperty("--coin-rotation-multiplier", 0);    coin.style.setProperty("--shine-opacity-multiplier", 0.4);    coin.style.setProperty("--shine-bg-multiplier", "50%");    coin.style.setProperty("opacity", 1);    // Delay to give the reset animation some time before you can click again    setTimeout(() => {      button.clicked = false;    }, 300);  };  var flipCoinLoop = () => {    coin.moveLoopCount++;    var percentageCompleted = coin.moveLoopCount / coin.maxMoveLoopCount;    coin.angle = -coin.maxFlipAngle * Math.pow(percentageCompleted - 1, 2) + coin.maxFlipAngle;    // Calculate the scale and position of the coin moving through the air    coin.style.setProperty("--coin-y-multiplier", -11 * Math.pow(percentageCompleted * 2 - 1, 4) + 11);    coin.style.setProperty("--coin-x-multiplier", percentageCompleted);    coin.style.setProperty("--coin-scale-multiplier", percentageCompleted * 0.6);    coin.style.setProperty("--coin-rotation-multiplier", percentageCompleted * coin.sideRotationCount);    // Calculate the scale and position values for the different coin faces    // The math uses sin/cos wave functions to similate the circular motion of 3D spin    coin.style.setProperty("--front-scale-multiplier", Math.max(Math.cos(coin.angle), 0));    coin.style.setProperty("--front-y-multiplier", Math.sin(coin.angle));    coin.style.setProperty("--middle-scale-multiplier", Math.abs(Math.cos(coin.angle), 0));    coin.style.setProperty("--middle-y-multiplier", Math.cos((coin.angle + Math.PI / 2) % Math.PI));    coin.style.setProperty("--back-scale-multiplier", Math.max(Math.cos(coin.angle - Math.PI), 0));    coin.style.setProperty("--back-y-multiplier", Math.sin(coin.angle - Math.PI));    coin.style.setProperty("--shine-opacity-multiplier", 4 * Math.sin((coin.angle + Math.PI / 2) % Math.PI) - 3.2);    coin.style.setProperty("--shine-bg-multiplier", -40 * (Math.cos((coin.angle + Math.PI / 2) % Math.PI) - 0.5) + "%");    // Repeat animation loop    if (coin.moveLoopCount < coin.maxMoveLoopCount) {      if (coin.moveLoopCount === coin.maxMoveLoopCount - 6) button.classList.add("shrink-landing");      window.requestAnimationFrame(flipCoinLoop);    } else {      button.classList.add("coin-landed");      coin.style.setProperty("opacity", 0);      setTimeout(() => {        button.classList.remove("clicked", "shrink-landing", "coin-landed");        setTimeout(() => {          resetCoin();        }, 300);      }, 1500);    }  };});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/runtime/runtime.min.css"/>
      <url>/css/runtime/runtime.min.css</url>
      
        <content type="html"><![CDATA[div#runtime{width:180px;margin:auto;color:#fff;padding-inline:5px;border-radius:10px;background-color:rgba(0,0,0,.7)}#workboard{font-size:12px}[data-theme=dark] div#runtime{color:#28b4c8;box-shadow:0 0 5px rgba(28,69,218,.71);animation:flashlight 1s linear infinite alternate}#ghbdages .github-badge img{height:20px}@-moz-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@-webkit-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@-o-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime/runtime.js"/>
      <url>/js/runtime/runtime.js</url>
      
        <content type="html"><![CDATA[var now = new Date();function createtime() {  var grt = new Date("07/21/2023 00:00:00");  now.setTime(now.getTime() + 250);  var days = (now - grt) / 1e3 / 60 / 60 / 24,    dnum = Math.floor(days),    hours = (now - grt) / 1e3 / 60 / 60 - 24 * dnum,    hnum = Math.floor(hours);  1 == String(hnum).length && (hnum = "0" + hnum);  var minutes = (now - grt) / 1e3 / 60 - 1440 * dnum - 60 * hnum,    mnum = Math.floor(minutes);  1 == String(mnum).length && (mnum = "0" + mnum);  var seconds = (now - grt) / 1e3 - 86400 * dnum - 3600 * hnum - 60 * mnum,    snum = Math.round(seconds);  1 == String(snum).length && (snum = "0" + snum);  let currentTimeHtml = "";  (currentTimeHtml =    hnum < 18 && hnum >= 9      ? `<span class="textTip"> <br> 本站居然运行了 ${dnum} 天</span><span id="runtime"> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class="fas fa-heartbeat" style="color:red"></i>`      : `<span class="textTip"> <br> 本站居然运行了 ${dnum} 天</span><span id="runtime"> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class="fas fa-heartbeat" style="color:red"></i>`),    document.getElementById("workboard") && (document.getElementById("workboard").innerHTML = currentTimeHtml);}setInterval(() => {  createtime();}, 250);]]></content>
      
    </entry>
    
    
  
</search>
